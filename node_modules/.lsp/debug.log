Hello - from /home/p9romain/Téléchargements/Dev/ST3/rls-linux/reason-language-server
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 1, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml","languageId":"ocaml","version":0,"text":"module Typ = Stt.Typ\ntype lt = Typ.t\n\ntype t_simp =\n  | S_Empty\n  | S_Letter of lt\n  | S_Concat of t_simp * t_simp\n  | S_Union of t_simp * t_simp\n  | S_Star of t_simp\ntype t_ext =\n  | Letter of lt\n  | Concat of t_ext list\n  | Union of t_ext list\n  | Star of t_ext\n  | Plus of t_ext\n  | Option of t_ext\n\n\n\nlet empty = S_Empty\n\nlet is_empty (r : t_simp) : bool =\n  r = empty\n\n\n\nlet letter (l : lt) : t_simp =\n  S_Letter l\n\nlet concat (r1 : t_simp) \n           (r2 : t_simp) : t_simp =\n  S_Concat (r1, r2)\n\nlet union (r1 : t_simp) \n          (r2 : t_simp) : t_simp =\n  S_Union (r1, r2)\n\nlet star (r : t_simp) : t_simp =\n  S_Star r\n\n\n\nlet rec simp_to_ext (r : t_simp) : t_ext =\n  match r with\n  | S_Empty -> failwith \"Can't convert the empty regex\"\n  | S_Letter l -> Letter l\n  | S_Concat (r1, r2) -> Concat [simp_to_ext r1; simp_to_ext r2]\n  | S_Union (r1, r2) -> Union [simp_to_ext r1; simp_to_ext r2]\n  | S_Star r -> Star (simp_to_ext r)\n\n\n\nlet rec flatten (r : t_ext) : t_ext =\n  match r with\n  | Letter _ -> r\n  | Concat l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Concat ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Concat (loop @@ List.map flatten l)\n  | Union l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Union ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Union (loop @@ List.map flatten l)\n  | Star r -> Star (flatten r)\n  | Plus r -> Plus (flatten r)\n  | Option r -> Option (flatten r)\n\nlet pp (r : t_ext) : string =\n  let rec loop (r : t_ext) : string =\n    match r with\n    | Letter l ->\n      Lt.pp l\n    | Concat l ->\n      String.concat \";\" @@ List.map loop l\n    | Union l ->\n      \"(\" ^ (String.concat \"|\" @@ List.map loop l) ^ \")\"\n    | Star r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"*\"\n        | _ -> \"(\" ^ loop r ^ \")*\"\n      )\n    | Plus r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"+\"\n        | _ -> \"(\" ^ loop r ^ \")+\"\n      )\n    | Option r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"?\"\n        | _ -> \"(\" ^ loop r ^ \")?\"\n      )\n  in\n  loop @@ flatten r\n\n\nlet get_rid_of_duplicate (l : 'a list) : 'a list =\n  List.rev @@ List.fold_left (\n    fun (acc : 'a list)\n        (elt : 'a) : 'a list ->\n      if List.mem elt acc then\n        acc\n      else\n        elt :: acc\n  )\n  [] l\n\nlet simplify (r : t_ext) : t_ext =\n  let rec simp (r : t_ext) : t_ext =\n    match r with\n    | Letter _ -> r\n    | Concat l ->\n      let l = List.map simp l in\n      let rec loop (l : t_ext list) : t_ext list =\n        match l with\n        | []\n        | _ :: [] -> l\n        | r1 :: r2 :: l ->\n          match r1, r2 with\n          | Star rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (Star rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Star rr1, rr2\n          | rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (simp @@ Plus rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt1, Letter lt2 ->\n              if Lt.is_epsilon lt1 then\n                loop @@ r2 :: l\n              else if Lt.is_epsilon lt2 then\n                loop @@ r1 :: l\n              else\n                List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt, _ ->\n            if Lt.is_epsilon lt then\n              loop @@ r2 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _, Letter lt ->\n            if Lt.is_epsilon lt then\n              loop @@ r1 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _ ->\n            List.cons r1 @@ loop @@ r2 :: l\n      in\n      ( \n        match loop l with\n        | [] -> failwith \"Empty concat is impossible\"\n        | r :: [] -> r\n        | l -> Concat l \n      )\n    | Union l ->\n      let unique_l = get_rid_of_duplicate @@ List.map simp l\n      in\n      (\n        match unique_l with\n        | [] -> failwith \"Empty union is impossible\"\n        | r :: [] -> r\n        | _ -> (\n          let (all_eps, without_eps) = List.partition (\n            fun (r : t_ext) : bool ->\n              match r with \n              | Letter lt -> Lt.is_epsilon lt \n              | _ -> false\n          ) \n          unique_l\n          in\n\n          (* Returns the prefix and what it comes next *)\n          let calc_prefix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r' :: next -> Some r', Some (Concat next)\n            )\n            | Plus r -> Some r, Some (Star r)\n            | _ -> Some r, None\n          in\n          (* Returns the suffix and what it comes before *)\n          let rec calc_suffix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r :: [] -> Some r, None \n              | r' :: next -> \n                let (suff, before) = calc_suffix @@ Concat next in\n                match before with\n                | None -> suff, Some r'\n                | Some before -> suff, Some (flatten @@ Concat [r'; before])\n            )\n            | Plus r -> Some (Star r), Some r\n            | _ -> Some r, None\n          in\n          (* Factorize \n\n              The boolean tells us if we can simplify the result, i.e\n                it has been factorized, thus changed (it prevents \n                looping infinitely when simplifying the new expression)\n          *)\n          let factorize (r : t_ext) : t_ext * bool =\n            let aux (r : t_ext)\n                    (calc : t_ext -> t_ext option * t_ext option)\n                    (concat_factors : t_ext -> t_ext -> t_ext)\n                    (factorize : t_ext -> t_ext list -> t_ext) : t_ext * bool =\n              match r with\n              | Union l ->\n                (* list of all regexp without the common factor *)\n                let max_left = ref l in\n                (* greatest common factor found *)\n                let max_factor = ref None in\n                let factor_not_found = ref true in\n                let has_been_factorized = ref false in\n                let () =\n                  while !factor_not_found do\n                    let all_factors, all_left = List.split\n                      @@ List.map calc !max_left\n                    in\n                    match get_rid_of_duplicate all_factors with\n                    | [] -> assert false (* No factor : issue *)\n                    | Some factor :: [] -> (\n                      has_been_factorized := true ;\n                      max_left := List.map (\n                        fun (left : t_ext option) : t_ext ->\n                          match left with\n                          | None -> Letter Lt.epsilon\n                          | Some r -> r\n                      )\n                      all_left ;\n                      match !max_factor with\n                      | None -> max_factor := Some factor    \n                      | Some old_factor -> \n                        max_factor := Some (concat_factors old_factor factor)\n                    )\n                    | None :: [] (* No factor found *)\n                    | _ -> factor_not_found := false (* More than one factor *)\n                  done\n                in \n                (\n                  match !max_factor with\n                  | None -> r, false\n                  | Some factor -> factorize factor !max_left, !has_been_factorized\n                )\n              | _ -> r, false\n            in\n            let r, is_factorized = aux r calc_prefix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ old_factor ; factor ]\n            )\n            (\n              fun (prefix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ prefix; Union left ]\n            )\n            in\n            let r, is_factorized' =  aux r calc_suffix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ factor ; old_factor ]\n            )\n            (\n              fun (suffix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ Union left; suffix ]\n            )\n            in\n            r, is_factorized || is_factorized'\n          in\n          match all_eps with \n          | [] -> (* no epsilon *)\n            let res, is_factorized = factorize @@ Union without_eps in\n            if is_factorized then (* else it will loop without an end *)\n              flatten @@ simp res\n            else \n              res\n          | _ -> (* at least one (singleton because we got rid of duplicates) *)\n            match without_eps with\n            | [] -> Letter Lt.epsilon (* it was an union of espilon (why not) *)\n            | r :: [] -> simp @@ Option r\n            | _ -> \n              let res, is_factorized = factorize @@ Union without_eps in\n              if is_factorized then\n                simp @@ Option (flatten @@ res)\n              else\n                simp @@ Option res\n\n        )\n      )\n    | Star r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Lt.is_epsilon l then\n            Letter l\n          else\n            Star (Letter l)\n        | Star r\n        | Plus r\n        | Option r -> Star r\n        | r -> Star r\n      end\n    | Plus r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Lt.is_epsilon l then\n            Letter l\n          else\n            Plus (Letter l)\n        | Star r\n        | Option r -> Star r\n        | Plus r -> Plus r\n        | r -> Plus r\n      end\n    | Option r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Lt.is_epsilon l then\n            Letter l\n          else\n            Option (Letter l)\n        | Star r\n        | Plus r -> Star r\n        | Option r -> Option r\n        | r -> Option r\n      end\n  in\n  simp @@ flatten r"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":10}},"context":{"diagnostics":[],"triggerKind":1,"only":["refactor","source"]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":11,"character":7}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":11,"character":7},"end":{"line":11,"character":7}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":14,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0128746032715ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":8}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 6, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":357,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":357,"character":11},"end":{"line":357,"character":12}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 8, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":151,"character":30}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":151,"character":17},"end":{"line":151,"character":30}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 10, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml","version":32},"contentChanges":[{"text":"module Typ = Stt.Typ\ntype lt = Typ.t\n\ntype t_simp =\n  | S_Empty\n  | S_Letter of lt\n  | S_Concat of t_simp * t_simp\n  | S_Union of t_simp * t_simp\n  | S_Star of t_simp\ntype t_ext =\n  | Letter of lt\n  | Concat of t_ext list\n  | Union of t_ext list\n  | Star of t_ext\n  | Plus of t_ext\n  | Option of t_ext\n\n\n\nlet empty = S_Empty\n\nlet is_empty (r : t_simp) : bool =\n  r = empty\n\n\n\nlet letter (l : lt) : t_simp =\n  S_Letter l\n\nlet concat (r1 : t_simp) \n           (r2 : t_simp) : t_simp =\n  S_Concat (r1, r2)\n\nlet union (r1 : t_simp) \n          (r2 : t_simp) : t_simp =\n  S_Union (r1, r2)\n\nlet star (r : t_simp) : t_simp =\n  S_Star r\n\n\n\nlet rec simp_to_ext (r : t_simp) : t_ext =\n  match r with\n  | S_Empty -> failwith \"Can't convert the empty regex\"\n  | S_Letter l -> Letter l\n  | S_Concat (r1, r2) -> Concat [simp_to_ext r1; simp_to_ext r2]\n  | S_Union (r1, r2) -> Union [simp_to_ext r1; simp_to_ext r2]\n  | S_Star r -> Star (simp_to_ext r)\n\n\n\nlet rec flatten (r : t_ext) : t_ext =\n  match r with\n  | Letter _ -> r\n  | Concat l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Concat ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Concat (loop @@ List.map flatten l)\n  | Union l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Union ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Union (loop @@ List.map flatten l)\n  | Star r -> Star (flatten r)\n  | Plus r -> Plus (flatten r)\n  | Option r -> Option (flatten r)\n\nlet pp (r : t_ext) : string =\n  let rec loop (r : t_ext) : string =\n    match r with\n    | Letter l ->\n      Lt.pp l\n    | Concat l ->\n      String.concat \";\" @@ List.map loop l\n    | Union l ->\n      \"(\" ^ (String.concat \"|\" @@ List.map loop l) ^ \")\"\n    | Star r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"*\"\n        | _ -> \"(\" ^ loop r ^ \")*\"\n      )\n    | Plus r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"+\"\n        | _ -> \"(\" ^ loop r ^ \")+\"\n      )\n    | Option r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"?\"\n        | _ -> \"(\" ^ loop r ^ \")?\"\n      )\n  in\n  loop @@ flatten r\n\n\nlet get_rid_of_duplicate (l : 'a list) : 'a list =\n  List.rev @@ List.fold_left (\n    fun (acc : 'a list)\n        (elt : 'a) : 'a list ->\n      if List.mem elt acc then\n        acc\n      else\n        elt :: acc\n  )\n  [] l\n\nlet simplify (r : t_ext) : t_ext =\n  let rec simp (r : t_ext) : t_ext =\n    match r with\n    | Letter _ -> r\n    | Concat l ->\n      let l = List.map simp l in\n      let rec loop (l : t_ext list) : t_ext list =\n        match l with\n        | []\n        | _ :: [] -> l\n        | r1 :: r2 :: l ->\n          match r1, r2 with\n          | Star rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (Star rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Star rr1, rr2\n          | rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (simp @@ Plus rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt1, Letter lt2 ->\n              if Typ lt1 then\n                loop @@ r2 :: l\n              else if Typ lt2 then\n                loop @@ r1 :: l\n              else\n                List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt, _ ->\n            if Typ lt then\n              loop @@ r2 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _, Letter lt ->\n            if Typ lt then\n              loop @@ r1 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _ ->\n            List.cons r1 @@ loop @@ r2 :: l\n      in\n      ( \n        match loop l with\n        | [] -> failwith \"Empty concat is impossible\"\n        | r :: [] -> r\n        | l -> Concat l \n      )\n    | Union l ->\n      let unique_l = get_rid_of_duplicate @@ List.map simp l\n      in\n      (\n        match unique_l with\n        | [] -> failwith \"Empty union is impossible\"\n        | r :: [] -> r\n        | _ -> (\n          let (all_eps, without_eps) = List.partition (\n            fun (r : t_ext) : bool ->\n              match r with \n              | Letter lt -> Typ lt \n              | _ -> false\n          ) \n          unique_l\n          in\n\n          (* Returns the prefix and what it comes next *)\n          let calc_prefix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r' :: next -> Some r', Some (Concat next)\n            )\n            | Plus r -> Some r, Some (Star r)\n            | _ -> Some r, None\n          in\n          (* Returns the suffix and what it comes before *)\n          let rec calc_suffix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r :: [] -> Some r, None \n              | r' :: next -> \n                let (suff, before) = calc_suffix @@ Concat next in\n                match before with\n                | None -> suff, Some r'\n                | Some before -> suff, Some (flatten @@ Concat [r'; before])\n            )\n            | Plus r -> Some (Star r), Some r\n            | _ -> Some r, None\n          in\n          (* Factorize \n\n              The boolean tells us if we can simplify the result, i.e\n                it has been factorized, thus changed (it prevents \n                looping infinitely when simplifying the new expression)\n          *)\n          let factorize (r : t_ext) : t_ext * bool =\n            let aux (r : t_ext)\n                    (calc : t_ext -> t_ext option * t_ext option)\n                    (concat_factors : t_ext -> t_ext -> t_ext)\n                    (factorize : t_ext -> t_ext list -> t_ext) : t_ext * bool =\n              match r with\n              | Union l ->\n                (* list of all regexp without the common factor *)\n                let max_left = ref l in\n                (* greatest common factor found *)\n                let max_factor = ref None in\n                let factor_not_found = ref true in\n                let has_been_factorized = ref false in\n                let () =\n                  while !factor_not_found do\n                    let all_factors, all_left = List.split\n                      @@ List.map calc !max_left\n                    in\n                    match get_rid_of_duplicate all_factors with\n                    | [] -> assert false (* No factor : issue *)\n                    | Some factor :: [] -> (\n                      has_been_factorized := true ;\n                      max_left := List.map (\n                        fun (left : t_ext option) : t_ext ->\n                          match left with\n                          | None -> Letter Lt.epsilon\n                          | Some r -> r\n                      )\n                      all_left ;\n                      match !max_factor with\n                      | None -> max_factor := Some factor    \n                      | Some old_factor -> \n                        max_factor := Some (concat_factors old_factor factor)\n                    )\n                    | None :: [] (* No factor found *)\n                    | _ -> factor_not_found := false (* More than one factor *)\n                  done\n                in \n                (\n                  match !max_factor with\n                  | None -> r, false\n                  | Some factor -> factorize factor !max_left, !has_been_factorized\n                )\n              | _ -> r, false\n            in\n            let r, is_factorized = aux r calc_prefix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ old_factor ; factor ]\n            )\n            (\n              fun (prefix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ prefix; Union left ]\n            )\n            in\n            let r, is_factorized' =  aux r calc_suffix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ factor ; old_factor ]\n            )\n            (\n              fun (suffix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ Union left; suffix ]\n            )\n            in\n            r, is_factorized || is_factorized'\n          in\n          match all_eps with \n          | [] -> (* no epsilon *)\n            let res, is_factorized = factorize @@ Union without_eps in\n            if is_factorized then (* else it will loop without an end *)\n              flatten @@ simp res\n            else \n              res\n          | _ -> (* at least one (singleton because we got rid of duplicates) *)\n            match without_eps with\n            | [] -> Letter Lt.epsilon (* it was an union of espilon (why not) *)\n            | r :: [] -> simp @@ Option r\n            | _ -> \n              let res, is_factorized = factorize @@ Union without_eps in\n              if is_factorized then\n                simp @@ Option (flatten @@ res)\n              else\n                simp @@ Option res\n\n        )\n      )\n    | Star r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ l then\n            Letter l\n          else\n            Star (Letter l)\n        | Star r\n        | Plus r\n        | Option r -> Star r\n        | r -> Star r\n      end\n    | Plus r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ l then\n            Letter l\n          else\n            Plus (Letter l)\n        | Star r\n        | Option r -> Star r\n        | Plus r -> Plus r\n        | r -> Plus r\n      end\n    | Option r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ l then\n            Letter l\n          else\n            Option (Letter l)\n        | Star r\n        | Plus r -> Star r\n        | Option r -> Option r\n        | r -> Option r\n      end\n  in\n  simp @@ flatten r"}]}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":151,"character":20}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 11, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":151,"character":20}}}
[server] Got a method textDocument/completion
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 12, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml","version":64},"contentChanges":[{"text":"module Typ = Stt.Typ\ntype lt = Typ.t\n\ntype t_simp =\n  | S_Empty\n  | S_Letter of lt\n  | S_Concat of t_simp * t_simp\n  | S_Union of t_simp * t_simp\n  | S_Star of t_simp\ntype t_ext =\n  | Letter of lt\n  | Concat of t_ext list\n  | Union of t_ext list\n  | Star of t_ext\n  | Plus of t_ext\n  | Option of t_ext\n\n\n\nlet empty = S_Empty\n\nlet is_empty (r : t_simp) : bool =\n  r = empty\n\n\n\nlet letter (l : lt) : t_simp =\n  S_Letter l\n\nlet concat (r1 : t_simp) \n           (r2 : t_simp) : t_simp =\n  S_Concat (r1, r2)\n\nlet union (r1 : t_simp) \n          (r2 : t_simp) : t_simp =\n  S_Union (r1, r2)\n\nlet star (r : t_simp) : t_simp =\n  S_Star r\n\n\n\nlet rec simp_to_ext (r : t_simp) : t_ext =\n  match r with\n  | S_Empty -> failwith \"Can't convert the empty regex\"\n  | S_Letter l -> Letter l\n  | S_Concat (r1, r2) -> Concat [simp_to_ext r1; simp_to_ext r2]\n  | S_Union (r1, r2) -> Union [simp_to_ext r1; simp_to_ext r2]\n  | S_Star r -> Star (simp_to_ext r)\n\n\n\nlet rec flatten (r : t_ext) : t_ext =\n  match r with\n  | Letter _ -> r\n  | Concat l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Concat ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Concat (loop @@ List.map flatten l)\n  | Union l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Union ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Union (loop @@ List.map flatten l)\n  | Star r -> Star (flatten r)\n  | Plus r -> Plus (flatten r)\n  | Option r -> Option (flatten r)\n\nlet pp (r : t_ext) : string =\n  let rec loop (r : t_ext) : string =\n    match r with\n    | Letter l ->\n      Lt.pp l\n    | Concat l ->\n      String.concat \";\" @@ List.map loop l\n    | Union l ->\n      \"(\" ^ (String.concat \"|\" @@ List.map loop l) ^ \")\"\n    | Star r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"*\"\n        | _ -> \"(\" ^ loop r ^ \")*\"\n      )\n    | Plus r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"+\"\n        | _ -> \"(\" ^ loop r ^ \")+\"\n      )\n    | Option r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"?\"\n        | _ -> \"(\" ^ loop r ^ \")?\"\n      )\n  in\n  loop @@ flatten r\n\n\nlet get_rid_of_duplicate (l : 'a list) : 'a list =\n  List.rev @@ List.fold_left (\n    fun (acc : 'a list)\n        (elt : 'a) : 'a list ->\n      if List.mem elt acc then\n        acc\n      else\n        elt :: acc\n  )\n  [] l\n\nlet simplify (r : t_ext) : t_ext =\n  let rec simp (r : t_ext) : t_ext =\n    match r with\n    | Letter _ -> r\n    | Concat l ->\n      let l = List.map simp l in\n      let rec loop (l : t_ext list) : t_ext list =\n        match l with\n        | []\n        | _ :: [] -> l\n        | r1 :: r2 :: l ->\n          match r1, r2 with\n          | Star rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (Star rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Star rr1, rr2\n          | rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (simp @@ Plus rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt1, Letter lt2 ->\n              if Typ.is_ lt1 then\n                loop @@ r2 :: l\n              else if Typ.is_ lt2 then\n                loop @@ r1 :: l\n              else\n                List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt, _ ->\n            if Typ.is_ lt then\n              loop @@ r2 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _, Letter lt ->\n            if Typ.is_ lt then\n              loop @@ r1 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _ ->\n            List.cons r1 @@ loop @@ r2 :: l\n      in\n      ( \n        match loop l with\n        | [] -> failwith \"Empty concat is impossible\"\n        | r :: [] -> r\n        | l -> Concat l \n      )\n    | Union l ->\n      let unique_l = get_rid_of_duplicate @@ List.map simp l\n      in\n      (\n        match unique_l with\n        | [] -> failwith \"Empty union is impossible\"\n        | r :: [] -> r\n        | _ -> (\n          let (all_eps, without_eps) = List.partition (\n            fun (r : t_ext) : bool ->\n              match r with \n              | Letter lt -> Typ.is_ lt \n              | _ -> false\n          ) \n          unique_l\n          in\n\n          (* Returns the prefix and what it comes next *)\n          let calc_prefix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r' :: next -> Some r', Some (Concat next)\n            )\n            | Plus r -> Some r, Some (Star r)\n            | _ -> Some r, None\n          in\n          (* Returns the suffix and what it comes before *)\n          let rec calc_suffix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r :: [] -> Some r, None \n              | r' :: next -> \n                let (suff, before) = calc_suffix @@ Concat next in\n                match before with\n                | None -> suff, Some r'\n                | Some before -> suff, Some (flatten @@ Concat [r'; before])\n            )\n            | Plus r -> Some (Star r), Some r\n            | _ -> Some r, None\n          in\n          (* Factorize \n\n              The boolean tells us if we can simplify the result, i.e\n                it has been factorized, thus changed (it prevents \n                looping infinitely when simplifying the new expression)\n          *)\n          let factorize (r : t_ext) : t_ext * bool =\n            let aux (r : t_ext)\n                    (calc : t_ext -> t_ext option * t_ext option)\n                    (concat_factors : t_ext -> t_ext -> t_ext)\n                    (factorize : t_ext -> t_ext list -> t_ext) : t_ext * bool =\n              match r with\n              | Union l ->\n                (* list of all regexp without the common factor *)\n                let max_left = ref l in\n                (* greatest common factor found *)\n                let max_factor = ref None in\n                let factor_not_found = ref true in\n                let has_been_factorized = ref false in\n                let () =\n                  while !factor_not_found do\n                    let all_factors, all_left = List.split\n                      @@ List.map calc !max_left\n                    in\n                    match get_rid_of_duplicate all_factors with\n                    | [] -> assert false (* No factor : issue *)\n                    | Some factor :: [] -> (\n                      has_been_factorized := true ;\n                      max_left := List.map (\n                        fun (left : t_ext option) : t_ext ->\n                          match left with\n                          | None -> Letter Lt.epsilon\n                          | Some r -> r\n                      )\n                      all_left ;\n                      match !max_factor with\n                      | None -> max_factor := Some factor    \n                      | Some old_factor -> \n                        max_factor := Some (concat_factors old_factor factor)\n                    )\n                    | None :: [] (* No factor found *)\n                    | _ -> factor_not_found := false (* More than one factor *)\n                  done\n                in \n                (\n                  match !max_factor with\n                  | None -> r, false\n                  | Some factor -> factorize factor !max_left, !has_been_factorized\n                )\n              | _ -> r, false\n            in\n            let r, is_factorized = aux r calc_prefix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ old_factor ; factor ]\n            )\n            (\n              fun (prefix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ prefix; Union left ]\n            )\n            in\n            let r, is_factorized' =  aux r calc_suffix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ factor ; old_factor ]\n            )\n            (\n              fun (suffix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ Union left; suffix ]\n            )\n            in\n            r, is_factorized || is_factorized'\n          in\n          match all_eps with \n          | [] -> (* no epsilon *)\n            let res, is_factorized = factorize @@ Union without_eps in\n            if is_factorized then (* else it will loop without an end *)\n              flatten @@ simp res\n            else \n              res\n          | _ -> (* at least one (singleton because we got rid of duplicates) *)\n            match without_eps with\n            | [] -> Letter Lt.epsilon (* it was an union of espilon (why not) *)\n            | r :: [] -> simp @@ Option r\n            | _ -> \n              let res, is_factorized = factorize @@ Union without_eps in\n              if is_factorized then\n                simp @@ Option (flatten @@ res)\n              else\n                simp @@ Option res\n\n        )\n      )\n    | Star r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_ l then\n            Letter l\n          else\n            Star (Letter l)\n        | Star r\n        | Plus r\n        | Option r -> Star r\n        | r -> Star r\n      end\n    | Plus r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_ l then\n            Letter l\n          else\n            Plus (Letter l)\n        | Star r\n        | Option r -> Star r\n        | Plus r -> Plus r\n        | r -> Plus r\n      end\n    | Option r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_ l then\n            Letter l\n          else\n            Option (Letter l)\n        | Star r\n        | Plus r -> Star r\n        | Option r -> Option r\n        | r -> Option r\n      end\n  in\n  simp @@ flatten r"}]}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":151,"character":24}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00619888305664ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 13, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":151,"character":24}}}
[server] Got a method textDocument/completion
[server] processing took 0.00309944152832ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 14, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":151,"character":24}}}
[server] Got a method textDocument/completion
[server] processing took 0.0309944152832ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 15, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml","version":104},"contentChanges":[{"text":"module Typ = Stt.Typ\ntype lt = Typ.t\n\ntype t_simp =\n  | S_Empty\n  | S_Letter of lt\n  | S_Concat of t_simp * t_simp\n  | S_Union of t_simp * t_simp\n  | S_Star of t_simp\ntype t_ext =\n  | Letter of lt\n  | Concat of t_ext list\n  | Union of t_ext list\n  | Star of t_ext\n  | Plus of t_ext\n  | Option of t_ext\n\n\n\nlet empty = S_Empty\n\nlet is_empty (r : t_simp) : bool =\n  r = empty\n\n\n\nlet letter (l : lt) : t_simp =\n  S_Letter l\n\nlet concat (r1 : t_simp) \n           (r2 : t_simp) : t_simp =\n  S_Concat (r1, r2)\n\nlet union (r1 : t_simp) \n          (r2 : t_simp) : t_simp =\n  S_Union (r1, r2)\n\nlet star (r : t_simp) : t_simp =\n  S_Star r\n\n\n\nlet rec simp_to_ext (r : t_simp) : t_ext =\n  match r with\n  | S_Empty -> failwith \"Can't convert the empty regex\"\n  | S_Letter l -> Letter l\n  | S_Concat (r1, r2) -> Concat [simp_to_ext r1; simp_to_ext r2]\n  | S_Union (r1, r2) -> Union [simp_to_ext r1; simp_to_ext r2]\n  | S_Star r -> Star (simp_to_ext r)\n\n\n\nlet rec flatten (r : t_ext) : t_ext =\n  match r with\n  | Letter _ -> r\n  | Concat l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Concat ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Concat (loop @@ List.map flatten l)\n  | Union l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Union ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Union (loop @@ List.map flatten l)\n  | Star r -> Star (flatten r)\n  | Plus r -> Plus (flatten r)\n  | Option r -> Option (flatten r)\n\nlet pp (r : t_ext) : string =\n  let rec loop (r : t_ext) : string =\n    match r with\n    | Letter l ->\n      Lt.pp l\n    | Concat l ->\n      String.concat \";\" @@ List.map loop l\n    | Union l ->\n      \"(\" ^ (String.concat \"|\" @@ List.map loop l) ^ \")\"\n    | Star r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"*\"\n        | _ -> \"(\" ^ loop r ^ \")*\"\n      )\n    | Plus r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"+\"\n        | _ -> \"(\" ^ loop r ^ \")+\"\n      )\n    | Option r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"?\"\n        | _ -> \"(\" ^ loop r ^ \")?\"\n      )\n  in\n  loop @@ flatten r\n\n\nlet get_rid_of_duplicate (l : 'a list) : 'a list =\n  List.rev @@ List.fold_left (\n    fun (acc : 'a list)\n        (elt : 'a) : 'a list ->\n      if List.mem elt acc then\n        acc\n      else\n        elt :: acc\n  )\n  [] l\n\nlet simplify (r : t_ext) : t_ext =\n  let rec simp (r : t_ext) : t_ext =\n    match r with\n    | Letter _ -> r\n    | Concat l ->\n      let l = List.map simp l in\n      let rec loop (l : t_ext list) : t_ext list =\n        match l with\n        | []\n        | _ :: [] -> l\n        | r1 :: r2 :: l ->\n          match r1, r2 with\n          | Star rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (Star rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Star rr1, rr2\n          | rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (simp @@ Plus rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt1, Letter lt2 ->\n              if Typ.is_empty lt1 then\n                loop @@ r2 :: l\n              else if Typ.is_empty lt2 then\n                loop @@ r1 :: l\n              else\n                List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt, _ ->\n            if Typ.is_empty lt then\n              loop @@ r2 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _, Letter lt ->\n            if Typ.is_empty lt then\n              loop @@ r1 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _ ->\n            List.cons r1 @@ loop @@ r2 :: l\n      in\n      ( \n        match loop l with\n        | [] -> failwith \"Empty concat is impossible\"\n        | r :: [] -> r\n        | l -> Concat l \n      )\n    | Union l ->\n      let unique_l = get_rid_of_duplicate @@ List.map simp l\n      in\n      (\n        match unique_l with\n        | [] -> failwith \"Empty union is impossible\"\n        | r :: [] -> r\n        | _ -> (\n          let (all_eps, without_eps) = List.partition (\n            fun (r : t_ext) : bool ->\n              match r with \n              | Letter lt -> Typ.is_empty lt \n              | _ -> false\n          ) \n          unique_l\n          in\n\n          (* Returns the prefix and what it comes next *)\n          let calc_prefix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r' :: next -> Some r', Some (Concat next)\n            )\n            | Plus r -> Some r, Some (Star r)\n            | _ -> Some r, None\n          in\n          (* Returns the suffix and what it comes before *)\n          let rec calc_suffix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r :: [] -> Some r, None \n              | r' :: next -> \n                let (suff, before) = calc_suffix @@ Concat next in\n                match before with\n                | None -> suff, Some r'\n                | Some before -> suff, Some (flatten @@ Concat [r'; before])\n            )\n            | Plus r -> Some (Star r), Some r\n            | _ -> Some r, None\n          in\n          (* Factorize \n\n              The boolean tells us if we can simplify the result, i.e\n                it has been factorized, thus changed (it prevents \n                looping infinitely when simplifying the new expression)\n          *)\n          let factorize (r : t_ext) : t_ext * bool =\n            let aux (r : t_ext)\n                    (calc : t_ext -> t_ext option * t_ext option)\n                    (concat_factors : t_ext -> t_ext -> t_ext)\n                    (factorize : t_ext -> t_ext list -> t_ext) : t_ext * bool =\n              match r with\n              | Union l ->\n                (* list of all regexp without the common factor *)\n                let max_left = ref l in\n                (* greatest common factor found *)\n                let max_factor = ref None in\n                let factor_not_found = ref true in\n                let has_been_factorized = ref false in\n                let () =\n                  while !factor_not_found do\n                    let all_factors, all_left = List.split\n                      @@ List.map calc !max_left\n                    in\n                    match get_rid_of_duplicate all_factors with\n                    | [] -> assert false (* No factor : issue *)\n                    | Some factor :: [] -> (\n                      has_been_factorized := true ;\n                      max_left := List.map (\n                        fun (left : t_ext option) : t_ext ->\n                          match left with\n                          | None -> Letter Lt.epsilon\n                          | Some r -> r\n                      )\n                      all_left ;\n                      match !max_factor with\n                      | None -> max_factor := Some factor    \n                      | Some old_factor -> \n                        max_factor := Some (concat_factors old_factor factor)\n                    )\n                    | None :: [] (* No factor found *)\n                    | _ -> factor_not_found := false (* More than one factor *)\n                  done\n                in \n                (\n                  match !max_factor with\n                  | None -> r, false\n                  | Some factor -> factorize factor !max_left, !has_been_factorized\n                )\n              | _ -> r, false\n            in\n            let r, is_factorized = aux r calc_prefix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ old_factor ; factor ]\n            )\n            (\n              fun (prefix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ prefix; Union left ]\n            )\n            in\n            let r, is_factorized' =  aux r calc_suffix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ factor ; old_factor ]\n            )\n            (\n              fun (suffix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ Union left; suffix ]\n            )\n            in\n            r, is_factorized || is_factorized'\n          in\n          match all_eps with \n          | [] -> (* no epsilon *)\n            let res, is_factorized = factorize @@ Union without_eps in\n            if is_factorized then (* else it will loop without an end *)\n              flatten @@ simp res\n            else \n              res\n          | _ -> (* at least one (singleton because we got rid of duplicates) *)\n            match without_eps with\n            | [] -> Letter Lt.epsilon (* it was an union of espilon (why not) *)\n            | r :: [] -> simp @@ Option r\n            | _ -> \n              let res, is_factorized = factorize @@ Union without_eps in\n              if is_factorized then\n                simp @@ Option (flatten @@ res)\n              else\n                simp @@ Option res\n\n        )\n      )\n    | Star r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Star (Letter l)\n        | Star r\n        | Plus r\n        | Option r -> Star r\n        | r -> Star r\n      end\n    | Plus r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Plus (Letter l)\n        | Star r\n        | Option r -> Star r\n        | Plus r -> Plus r\n        | r -> Plus r\n      end\n    | Option r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Option (Letter l)\n        | Star r\n        | Plus r -> Star r\n        | Option r -> Option r\n        | r -> Option r\n      end\n  in\n  simp @@ flatten r"}]}}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":151,"character":29}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00476837158203ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":151,"character":29}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 17, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":151,"character":29}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 18, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":90,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 19, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":90,"character":11},"end":{"line":90,"character":11}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0128746032715ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 20, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml","languageId":"ocaml","version":0,"text":"open Format\nopen Stt\nmodule Name = Base.Hstring\ntype regexp = |\n\ntype t =\n    Printer of (formatter -> unit)\n  | Pair of t * t\n  | Arrow of t * t\n  | Cup of t list (* invariant cup/cap list have length >= 1 *)\n  | Cap of t list\n  | Diff of t * t\n  | Neg of t\n  | Regexp of regexp\n  (*  | Apply of Name.t * t list *)\n  | Rec of t * (Name.t * t) list\n\nmodule Prio : sig\n  type level = private int\n  val level : t -> level\n  val lowest : level\nend =\nstruct\n  type level = int\n  let lowest = 0\n  let level = function\n      Printer _ | Pair _ (* | Apply _ *) -> 10\n    | Neg _-> 9\n    | Cap _ | Diff _ -> 8\n    | Cup _ -> 7\n    | Arrow _ | Regexp _ -> 6\n    | Rec _ -> 5\nend\n\nlet var v = Printer (dprintf \"%a\" Var.pp v)\nlet name v = Printer (dprintf \"%s\" Name.(!!v))\nlet any = Printer (dprintf \"Any\")\nlet empty_ = Printer (dprintf \"Empty\")\n\nlet rec pr ?(assoc=true) parent_level  ppf t =\n  let level = Prio.level t in\n  let do_parens = level < parent_level ||\n                  (level = parent_level && not assoc)\n  in\n  fprintf ppf \"@[\";\n  if do_parens then fprintf ppf \"(\";\n  let () =\n    match t with\n      Printer f -> fprintf ppf \"%t\" f\n    | Pair (t1, t2) -> fprintf ppf \"(%a,@ %a)\" (pr level) t1 (pr level) t2\n    | Arrow (t1, t2) -> fprintf ppf \"%a@ ->@ %a\" (pr ~assoc:false level) t1 (pr level) t2\n    | Cup l -> fprintf ppf \"@[%a@]\" (pr_list_sep ~sep:\" |\" level) l\n    | Cap l -> fprintf ppf \"@[%a@]\" (pr_list_sep ~sep:\" &\" level) l\n    | Diff (t1, t2) -> fprintf ppf \"%a@ \\\\@ %a\" (pr level) t1 (pr ~assoc:false level) t2\n    | Neg t -> fprintf ppf \"~%a\" (pr level) t\n    (*\n    | Apply (n, args) -> fprintf ppf \"%s (@[%a@])\" Name.(!!n) (pr_list_sep ~sep:\",\" Prio.lowest) args\n    *)\n    | Rec (t, defs) -> fprintf ppf \"%a@ where@ @[%a@]\" (pr level) t pr_defs defs\n  in\n  if do_parens then fprintf ppf \")\";\n  fprintf ppf \"@]\"\n\nand pr_list_sep ~sep level ppf l =\n  match l with\n    [] -> assert false\n  | t :: [] -> pr level ppf t\n  | t :: tl -> fprintf ppf \"%a%s@ \" (pr level) t sep;\n    pr_list_sep ~sep level ppf tl\n\nand pr_def ppf (x, t) =\n  fprintf ppf \"@[%s =@ %a@]\" Name.(!!x) (pr Prio.lowest) t\nand pr_defs ppf l =\n  match l with\n    [] -> assert false\n  | d :: [] -> pr_def ppf d\n  | d :: ll -> fprintf ppf \"%a@ and@ \" pr_def d;\n    pr_defs ppf ll\n\nlet is_empty_comp (module M : Typ.Basic) t =\n  Typ.(is_empty (M.set (M.get t) empty))\n\nlet is_any_comp (module M : Typ.Basic) t =\n  let any_comp = M.set (M.get Typ.any) Typ.empty in\n  Typ.(subtype any_comp (M.set (M.get t) empty))\n\nlet choose_complement t =\n  let empty_comps = List.fold_left (fun acc b ->\n      let i =\n        match b with\n          Typ.Basic (module M)\n        | Typ.Constr ((module M), _) ->\n          if is_any_comp (module M) t then 1 else 0\n      in\n      acc + i\n    ) 0 Typ.all_components\n  in\n  empty_comps > Typ.num_components / 2\n\n\nmodule Vars = Base.Common.Pair (Var.Set) (Var.Set)\nmodule VarTable = Hashtbl.Make (Vars)\nmodule DescrTable = Hashtbl.Make (Typ)\nlet group_by_vars t =\n  let open Typ in\n  let var_table = VarTable.create 16 in\n  let get table key = try VarTable.find table key with Not_found -> empty in\n  let replace table key t = VarTable.replace table key t in\n  let update table key t = replace table key (cup t (get table key)) in\n  (* Group according to the DNF *)\n  List.iter (function Basic (module M) | Constr ((module M), _) ->\n      M.get t\n      |> M.dnf\n      |> Seq.iter (fun ((pos, neg), l) ->\n          let key = (Var.Set.of_list pos, Var.Set.of_list neg) in\n          update var_table key (M.set (M.leaf l) empty)\n        )\n    ) all_components;\n  var_table\n\nlet reduce_variables var_table =\n  (* assumes (pos <> neg) *)\n  let vdest = VarTable.create 16 in\n  let empty_key = Var.Set.(empty, empty) in\n  let update_empty t =\n    let s = try VarTable.find vdest empty_key with Not_found -> Typ.empty in\n    VarTable.replace vdest empty_key Typ.(cup t s)\n  in\n  let te = try VarTable.find var_table empty_key with Not_found -> Typ.empty in\n  VarTable.remove var_table empty_key;\n  VarTable.add vdest empty_key te;\n  VarTable.iter (fun ((pos, neg) as key) t1 ->\n      if not (VarTable.mem vdest key) then begin\n        try\n          let t2 = VarTable.find vdest (neg, pos) in\n          let i12 = Typ.cap t1 t2 in\n          if Typ.is_empty i12 then begin\n            VarTable.add vdest key t1;\n            VarTable.add vdest (neg, pos) t2;\n          end else begin\n            update_empty i12;\n            VarTable.add vdest key Typ.(diff t1 i12);\n            VarTable.add vdest (neg, pos) Typ.(diff t2 i12);\n          end\n        with Not_found -> VarTable.add vdest key t1\n      end) var_table;\n  let te = VarTable.find vdest empty_key in\n  if Typ.is_empty te then VarTable.remove vdest empty_key;\n  vdest\n\nlet split_variables t =\n  let table = group_by_vars t in\n  reduce_variables table\n\nlet is_any t = Typ.(subtype any t)\nlet pcap l = match l with\n    [] -> assert false\n  | [ t ] -> t\n  | _ -> Cap l\n\nlet pcup l = match l with\n  | [] -> empty_\n  | [ t ] -> t\n  | _ -> Cup l\n\nlet any_prod = Pair (any, any)\nlet any_arrow = name (Name.cons \"Arrow\")\n\nlet get_leaf (type t) (module M : Typ.Basic with type Leaf.t = t) t =\n  match (M.get t |> M.dnf) () with\n    Seq.Nil -> M.Leaf.empty\n  | Seq.Cons((([], []), l), _ ) -> l\n  | _ -> assert false\n\nlet pbasic (module M : Typ.Basic) t acc =\n  let l = get_leaf (module M) t in\n  if M.Leaf.is_empty l then acc else (Printer (fun ppf -> M.Leaf.pp ppf l))::acc\n\nlet rec_names = Array.map Name.cons [|\"X\"; \"Y\"; \"Z\"; \"T\"; \"U\"; \"V\"; \"W\"|]\nlet decompile t =\n  let memo = DescrTable.create 16 in\n  let name_id = ref 0 in\n  let get_name () =\n    let i = !name_id in\n    incr name_id;\n    let len = Array.length rec_names in\n    if i >= len then Name.cons (\"X\" ^ (string_of_int (i-len)))\n    else rec_names.(i)\n  in\n  let rec pr_descr t =\n    match DescrTable.find memo t with\n    | Some (_, _, pname) -> pname\n    | None ->\n      let n = get_name () in\n      let pname = name n in\n      DescrTable.replace memo t (Some (n, empty_, pname));\n      pname\n    | exception Not_found ->\n      DescrTable.add memo t None;\n      let var_table = split_variables t in\n      let acc, has_others  =\n        match VarTable.find_opt var_table Var.Set.(empty, empty) with\n          Some t -> if is_any t then [any], false else\n            begin\n              VarTable.remove var_table Var.Set.(empty, empty);\n              [ pr_choose_compl t ], true\n            end\n        | None -> [], true\n      in\n      let acc = if not has_others then acc else\n          VarTable.fold (fun (vpos, vneg) t acc ->\n              if Typ.is_empty t then acc else\n                let tacc = Var.Set.fold (fun v acc -> (var v) :: acc) vpos [] in\n                let tacc = Var.Set.fold (fun v acc -> (Neg (var v)) :: acc) vneg tacc in\n                let tacc = if is_any t then tacc else (pr_choose_compl t) :: tacc in\n                (pcap (List.rev tacc)) :: acc)\n            var_table acc\n      in\n      let res = pcup acc in\n      match DescrTable.find memo t with\n        None -> DescrTable.remove memo t; res\n      | Some (n, _, pname) ->\n        DescrTable.replace memo t (Some (n, res, pname)); res\n  and pr_node n = pr_descr (Typ.descr n)\n  and pr_choose_compl t =\n    let do_complement = choose_complement t in\n    let t = if do_complement then Typ.neg t else t in\n    let res = pr_no_var t in\n    match res, do_complement with\n      [], false -> empty_\n    | [], true -> any\n    | l, false -> pcup l\n    | l, true -> Diff (any, pcup l)\n  and pr_no_var t =\n    let open Typ in\n    let acc = [] in\n    let acc = pbasic (module VarEnum) t acc in\n    let acc = pbasic (module VarInt) t acc in\n    let acc = pbasic (module VarChar) t acc in\n    let acc = pbasic (module VarUnit) t acc in\n    let acc =\n      let tp = Typ.(cap t @@ product (node any) (node any)) in\n      if Typ.(is_any tp || is_empty tp) then\n        acc\n      else begin\n        let any_star =\n          let open Typ in\n          let x = make () in\n          let p = product (node any) x in\n          let c = cup Builtins.nil p in\n          let () = def x c in\n          c\n        in\n        let ts = Typ.cap tp any_star in\n        if Typ.is_empty ts then\n          tp :: acc\n        else\n          let tmp = Typ.empty in\n          tmp :: (Typ.diff tp ts) :: acc\n      end\n    in\n    let acc = pr_constr (module VarProduct : Basic with type Leaf.t = Product.t)\n        (module Product : Base.Sigs.Bdd with type t = Product.t\n                                         and type atom = Product.atom\n                                         and type Leaf.t = Product.Leaf.t)\n        any_prod pr_product_line t acc\n    in\n    let acc = pr_constr (module VarArrow : Basic with type Leaf.t = Product.t)\n        (module Product : Base.Sigs.Bdd with type t = Product.t\n                                         and type atom = Product.atom\n                                         and type Leaf.t = Product.Leaf.t)\n        any_arrow pr_arrow_line t acc\n    in\n    acc\n  and pr_constr (type t a l)\n      (module V : Typ.Basic with type Leaf.t = t)\n      (module C : Base.Sigs.Bdd with type t = t and type atom = a and type Leaf.t = l)\n      any pr_line t acc =\n    if is_empty_comp (module V) t then acc\n    else if is_any_comp (module V) t then any :: acc\n    else\n      (*let () = Format.eprintf \"Going to ARROW LINE CAUSE: %a is not empty\\n%!\" \n      Typ.pp (V.set (V.get t) Typ.empty) in*)\n      let dnf = get_leaf (module V) t in\n      C.dnf dnf\n      |> Seq.fold_left pr_line acc\n  and pr_product_line acc ((posp, negp), _) =\n    let posp =\n      let open Typ in\n      match posp with\n        [] -> None\n      | [ (n1, n2)] -> Some (Pair(pr_node n1, pr_node n2))\n      | ( n1, n2) :: ll ->\n        let n1, n2 = List.fold_left (fun (t1, t2) (n1, n2) ->\n            (cap t1 (descr n1), cap t2 (descr n2))) (descr n1, descr n2) ll\n        in  Some ( Pair (pr_descr n1, pr_descr n2))\n    in\n    let negp = List.map (fun (n1, n2) -> Pair (pr_node n1, pr_node n2)) negp in\n    let posp = match posp with None ->Pair (any, any) | Some l -> l in\n    let res = match negp with\n        [] -> posp\n      | l -> Diff(posp, pcup l)\n    in res :: acc\n  and pr_arrow_line acc ((posa, nega),_) =\n    (*Format.eprintf \"IN ARROW LINE\\n%!\"; *)\n    let arrow (n1, n2) = Arrow (pr_node n1, pr_node n2) in\n    let posa = List.map arrow posa in\n    let nega = List.map arrow nega in\n    let posa = match posa with [] -> any_arrow | l -> pcap l in\n    let res = match nega with\n        [] -> posa\n      | l -> Diff(posa, pcup l)\n    in\n    res :: acc\n  in\n  let res = pr_descr t in\n  let recs = DescrTable.fold (fun _ x acc ->\n      match x with\n        None -> acc\n      | Some (n, d, _) -> (n, d)::acc\n    ) memo []\n  in\n  match recs with\n    [] -> res\n  | _ -> Rec(res, recs)\n\nlet global_print_table = DescrTable.create 16\n\nlet pp fmt t =\n  let d = try DescrTable.find global_print_table t with\n      Not_found ->\n      let d = decompile t in\n      DescrTable.add global_print_table t d;\n      d\n  in\n  pr Prio.lowest fmt d"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","languageId":"ocaml","version":0,"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n    let buf = Buffer.create 16 in\n    let fmt = Format.formatter_of_buffer buf in\n    let () = Syntax.Pretty.pp fmt t in\n    let () = Format.pp_print_newline fmt () in\n    Buffer.output_buffer Stdlib.stdout buf\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.mli","languageId":"ocaml","version":0,"text":"type lt\n(** The letter type *)\n\ntype t_simp\n(** A simple implementation of a regex *)\ntype t_ext\n(** An extended version of the regex (with the option and plus) *)\n\nval empty : t_simp\n(** The empty regex *)\nval is_empty : t_simp -> bool\n(** [is_empty r] checks if the regexp is the empty (not the empty word : ɛ ≠ ∅) *)\n\nval letter : lt -> t_simp\n(** [letter l] creates a regex with the letter [l] *)\nval concat : t_simp -> t_simp -> t_simp\n(** [concat r1 r2] creates a regex by concatenating [r1] with [r2] *)\nval union : t_simp -> t_simp -> t_simp\n(** [union r1 r2] creates a regex by uniting [r1] with [r2] *)\nval star : t_simp -> t_simp\n(** [star r] creates a regex with the Kleene star *)\n\nval simp_to_ext : t_simp -> t_ext\n(** [simp_to_ext r] extends the simple regex [r], in order to simplify or print it *)\n\nval pp : t_ext -> string\n(** [pp r] cast the regex [r] into a string *)\n\nval simplify : t_ext -> t_ext\n(** [simplify r] normalizes and simplfies the regex [r] as much as possible *)"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":16,"character":42}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 21, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":4},"end":{"line":16,"character":42}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 22, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":90,"character":11},"end":{"line":90,"character":11}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 23, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":89,"character":6}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 24, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":89,"character":6},"end":{"line":89,"character":13}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 25, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":89,"character":6}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 26, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml","version":106},"contentChanges":[{"text":"module Typ = Stt.Typ\ntype lt = Typ.t\n\ntype t_simp =\n  | S_Empty\n  | S_Letter of lt\n  | S_Concat of t_simp * t_simp\n  | S_Union of t_simp * t_simp\n  | S_Star of t_simp\ntype t_ext =\n  | Letter of lt\n  | Concat of t_ext list\n  | Union of t_ext list\n  | Star of t_ext\n  | Plus of t_ext\n  | Option of t_ext\n\n\n\nlet empty = S_Empty\n\nlet is_empty (r : t_simp) : bool =\n  r = empty\n\n\n\nlet letter (l : lt) : t_simp =\n  S_Letter l\n\nlet concat (r1 : t_simp) \n           (r2 : t_simp) : t_simp =\n  S_Concat (r1, r2)\n\nlet union (r1 : t_simp) \n          (r2 : t_simp) : t_simp =\n  S_Union (r1, r2)\n\nlet star (r : t_simp) : t_simp =\n  S_Star r\n\n\n\nlet rec simp_to_ext (r : t_simp) : t_ext =\n  match r with\n  | S_Empty -> failwith \"Can't convert the empty regex\"\n  | S_Letter l -> Letter l\n  | S_Concat (r1, r2) -> Concat [simp_to_ext r1; simp_to_ext r2]\n  | S_Union (r1, r2) -> Union [simp_to_ext r1; simp_to_ext r2]\n  | S_Star r -> Star (simp_to_ext r)\n\n\n\nlet rec flatten (r : t_ext) : t_ext =\n  match r with\n  | Letter _ -> r\n  | Concat l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Concat ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Concat (loop @@ List.map flatten l)\n  | Union l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Union ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Union (loop @@ List.map flatten l)\n  | Star r -> Star (flatten r)\n  | Plus r -> Plus (flatten r)\n  | Option r -> Option (flatten r)\n\nlet pp (r : t_ext) : string =\n  let rec loop (r : t_ext) : string =\n    match r with\n    | Letter l ->\n      let buf = Buffer.create 16 in\n    let fmt = Format.formatter_of_buffer buf in\n    let () = Syntax.Pretty.pp fmt t in\n    let () = Format.pp_print_newline fmt () in\n    Buffer.output_buffer Stdlib.stdout buf\n    | Concat l ->\n      String.concat \";\" @@ List.map loop l\n    | Union l ->\n      \"(\" ^ (String.concat \"|\" @@ List.map loop l) ^ \")\"\n    | Star r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"*\"\n        | _ -> \"(\" ^ loop r ^ \")*\"\n      )\n    | Plus r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"+\"\n        | _ -> \"(\" ^ loop r ^ \")+\"\n      )\n    | Option r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"?\"\n        | _ -> \"(\" ^ loop r ^ \")?\"\n      )\n  in\n  loop @@ flatten r\n\n\nlet get_rid_of_duplicate (l : 'a list) : 'a list =\n  List.rev @@ List.fold_left (\n    fun (acc : 'a list)\n        (elt : 'a) : 'a list ->\n      if List.mem elt acc then\n        acc\n      else\n        elt :: acc\n  )\n  [] l\n\nlet simplify (r : t_ext) : t_ext =\n  let rec simp (r : t_ext) : t_ext =\n    match r with\n    | Letter _ -> r\n    | Concat l ->\n      let l = List.map simp l in\n      let rec loop (l : t_ext list) : t_ext list =\n        match l with\n        | []\n        | _ :: [] -> l\n        | r1 :: r2 :: l ->\n          match r1, r2 with\n          | Star rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (Star rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Star rr1, rr2\n          | rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (simp @@ Plus rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt1, Letter lt2 ->\n              if Typ.is_empty lt1 then\n                loop @@ r2 :: l\n              else if Typ.is_empty lt2 then\n                loop @@ r1 :: l\n              else\n                List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt, _ ->\n            if Typ.is_empty lt then\n              loop @@ r2 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _, Letter lt ->\n            if Typ.is_empty lt then\n              loop @@ r1 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _ ->\n            List.cons r1 @@ loop @@ r2 :: l\n      in\n      ( \n        match loop l with\n        | [] -> failwith \"Empty concat is impossible\"\n        | r :: [] -> r\n        | l -> Concat l \n      )\n    | Union l ->\n      let unique_l = get_rid_of_duplicate @@ List.map simp l\n      in\n      (\n        match unique_l with\n        | [] -> failwith \"Empty union is impossible\"\n        | r :: [] -> r\n        | _ -> (\n          let (all_eps, without_eps) = List.partition (\n            fun (r : t_ext) : bool ->\n              match r with \n              | Letter lt -> Typ.is_empty lt \n              | _ -> false\n          ) \n          unique_l\n          in\n\n          (* Returns the prefix and what it comes next *)\n          let calc_prefix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r' :: next -> Some r', Some (Concat next)\n            )\n            | Plus r -> Some r, Some (Star r)\n            | _ -> Some r, None\n          in\n          (* Returns the suffix and what it comes before *)\n          let rec calc_suffix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r :: [] -> Some r, None \n              | r' :: next -> \n                let (suff, before) = calc_suffix @@ Concat next in\n                match before with\n                | None -> suff, Some r'\n                | Some before -> suff, Some (flatten @@ Concat [r'; before])\n            )\n            | Plus r -> Some (Star r), Some r\n            | _ -> Some r, None\n          in\n          (* Factorize \n\n              The boolean tells us if we can simplify the result, i.e\n                it has been factorized, thus changed (it prevents \n                looping infinitely when simplifying the new expression)\n          *)\n          let factorize (r : t_ext) : t_ext * bool =\n            let aux (r : t_ext)\n                    (calc : t_ext -> t_ext option * t_ext option)\n                    (concat_factors : t_ext -> t_ext -> t_ext)\n                    (factorize : t_ext -> t_ext list -> t_ext) : t_ext * bool =\n              match r with\n              | Union l ->\n                (* list of all regexp without the common factor *)\n                let max_left = ref l in\n                (* greatest common factor found *)\n                let max_factor = ref None in\n                let factor_not_found = ref true in\n                let has_been_factorized = ref false in\n                let () =\n                  while !factor_not_found do\n                    let all_factors, all_left = List.split\n                      @@ List.map calc !max_left\n                    in\n                    match get_rid_of_duplicate all_factors with\n                    | [] -> assert false (* No factor : issue *)\n                    | Some factor :: [] -> (\n                      has_been_factorized := true ;\n                      max_left := List.map (\n                        fun (left : t_ext option) : t_ext ->\n                          match left with\n                          | None -> Letter Lt.epsilon\n                          | Some r -> r\n                      )\n                      all_left ;\n                      match !max_factor with\n                      | None -> max_factor := Some factor    \n                      | Some old_factor -> \n                        max_factor := Some (concat_factors old_factor factor)\n                    )\n                    | None :: [] (* No factor found *)\n                    | _ -> factor_not_found := false (* More than one factor *)\n                  done\n                in \n                (\n                  match !max_factor with\n                  | None -> r, false\n                  | Some factor -> factorize factor !max_left, !has_been_factorized\n                )\n              | _ -> r, false\n            in\n            let r, is_factorized = aux r calc_prefix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ old_factor ; factor ]\n            )\n            (\n              fun (prefix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ prefix; Union left ]\n            )\n            in\n            let r, is_factorized' =  aux r calc_suffix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ factor ; old_factor ]\n            )\n            (\n              fun (suffix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ Union left; suffix ]\n            )\n            in\n            r, is_factorized || is_factorized'\n          in\n          match all_eps with \n          | [] -> (* no epsilon *)\n            let res, is_factorized = factorize @@ Union without_eps in\n            if is_factorized then (* else it will loop without an end *)\n              flatten @@ simp res\n            else \n              res\n          | _ -> (* at least one (singleton because we got rid of duplicates) *)\n            match without_eps with\n            | [] -> Letter Lt.epsilon (* it was an union of espilon (why not) *)\n            | r :: [] -> simp @@ Option r\n            | _ -> \n              let res, is_factorized = factorize @@ Union without_eps in\n              if is_factorized then\n                simp @@ Option (flatten @@ res)\n              else\n                simp @@ Option res\n\n        )\n      )\n    | Star r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Star (Letter l)\n        | Star r\n        | Plus r\n        | Option r -> Star r\n        | r -> Star r\n      end\n    | Plus r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Plus (Letter l)\n        | Star r\n        | Option r -> Star r\n        | Plus r -> Plus r\n        | r -> Plus r\n      end\n    | Option r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Option (Letter l)\n        | Star r\n        | Plus r -> Star r\n        | Option r -> Option r\n        | r -> Option r\n      end\n  in\n  simp @@ flatten r"}]}}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":93,"character":42}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 27, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":93,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00882148742676ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 28, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":90,"character":4},"end":{"line":93,"character":12}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 29, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml","version":110},"contentChanges":[{"text":"module Typ = Stt.Typ\ntype lt = Typ.t\n\ntype t_simp =\n  | S_Empty\n  | S_Letter of lt\n  | S_Concat of t_simp * t_simp\n  | S_Union of t_simp * t_simp\n  | S_Star of t_simp\ntype t_ext =\n  | Letter of lt\n  | Concat of t_ext list\n  | Union of t_ext list\n  | Star of t_ext\n  | Plus of t_ext\n  | Option of t_ext\n\n\n\nlet empty = S_Empty\n\nlet is_empty (r : t_simp) : bool =\n  r = empty\n\n\n\nlet letter (l : lt) : t_simp =\n  S_Letter l\n\nlet concat (r1 : t_simp) \n           (r2 : t_simp) : t_simp =\n  S_Concat (r1, r2)\n\nlet union (r1 : t_simp) \n          (r2 : t_simp) : t_simp =\n  S_Union (r1, r2)\n\nlet star (r : t_simp) : t_simp =\n  S_Star r\n\n\n\nlet rec simp_to_ext (r : t_simp) : t_ext =\n  match r with\n  | S_Empty -> failwith \"Can't convert the empty regex\"\n  | S_Letter l -> Letter l\n  | S_Concat (r1, r2) -> Concat [simp_to_ext r1; simp_to_ext r2]\n  | S_Union (r1, r2) -> Union [simp_to_ext r1; simp_to_ext r2]\n  | S_Star r -> Star (simp_to_ext r)\n\n\n\nlet rec flatten (r : t_ext) : t_ext =\n  match r with\n  | Letter _ -> r\n  | Concat l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Concat ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Concat (loop @@ List.map flatten l)\n  | Union l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Union ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Union (loop @@ List.map flatten l)\n  | Star r -> Star (flatten r)\n  | Plus r -> Plus (flatten r)\n  | Option r -> Option (flatten r)\n\nlet pp (r : t_ext) : string =\n  let rec loop (r : t_ext) : string =\n    match r with\n    | Letter l ->\n      let buf = Buffer.create 16 in\n      let fmt = Format.formatter_of_buffer buf in\n      let () = Syntax.Pretty.pp fmt t in\n      let () = Format.pp_print_newline fmt () in\n      Buffer.output_buffer Stdlib.stdout buf\n    | Concat l ->\n      String.concat \";\" @@ List.map loop l\n    | Union l ->\n      \"(\" ^ (String.concat \"|\" @@ List.map loop l) ^ \")\"\n    | Star r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"*\"\n        | _ -> \"(\" ^ loop r ^ \")*\"\n      )\n    | Plus r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"+\"\n        | _ -> \"(\" ^ loop r ^ \")+\"\n      )\n    | Option r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"?\"\n        | _ -> \"(\" ^ loop r ^ \")?\"\n      )\n  in\n  loop @@ flatten r\n\n\nlet get_rid_of_duplicate (l : 'a list) : 'a list =\n  List.rev @@ List.fold_left (\n    fun (acc : 'a list)\n        (elt : 'a) : 'a list ->\n      if List.mem elt acc then\n        acc\n      else\n        elt :: acc\n  )\n  [] l\n\nlet simplify (r : t_ext) : t_ext =\n  let rec simp (r : t_ext) : t_ext =\n    match r with\n    | Letter _ -> r\n    | Concat l ->\n      let l = List.map simp l in\n      let rec loop (l : t_ext list) : t_ext list =\n        match l with\n        | []\n        | _ :: [] -> l\n        | r1 :: r2 :: l ->\n          match r1, r2 with\n          | Star rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (Star rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Star rr1, rr2\n          | rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (simp @@ Plus rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt1, Letter lt2 ->\n              if Typ.is_empty lt1 then\n                loop @@ r2 :: l\n              else if Typ.is_empty lt2 then\n                loop @@ r1 :: l\n              else\n                List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt, _ ->\n            if Typ.is_empty lt then\n              loop @@ r2 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _, Letter lt ->\n            if Typ.is_empty lt then\n              loop @@ r1 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _ ->\n            List.cons r1 @@ loop @@ r2 :: l\n      in\n      ( \n        match loop l with\n        | [] -> failwith \"Empty concat is impossible\"\n        | r :: [] -> r\n        | l -> Concat l \n      )\n    | Union l ->\n      let unique_l = get_rid_of_duplicate @@ List.map simp l\n      in\n      (\n        match unique_l with\n        | [] -> failwith \"Empty union is impossible\"\n        | r :: [] -> r\n        | _ -> (\n          let (all_eps, without_eps) = List.partition (\n            fun (r : t_ext) : bool ->\n              match r with \n              | Letter lt -> Typ.is_empty lt \n              | _ -> false\n          ) \n          unique_l\n          in\n\n          (* Returns the prefix and what it comes next *)\n          let calc_prefix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r' :: next -> Some r', Some (Concat next)\n            )\n            | Plus r -> Some r, Some (Star r)\n            | _ -> Some r, None\n          in\n          (* Returns the suffix and what it comes before *)\n          let rec calc_suffix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r :: [] -> Some r, None \n              | r' :: next -> \n                let (suff, before) = calc_suffix @@ Concat next in\n                match before with\n                | None -> suff, Some r'\n                | Some before -> suff, Some (flatten @@ Concat [r'; before])\n            )\n            | Plus r -> Some (Star r), Some r\n            | _ -> Some r, None\n          in\n          (* Factorize \n\n              The boolean tells us if we can simplify the result, i.e\n                it has been factorized, thus changed (it prevents \n                looping infinitely when simplifying the new expression)\n          *)\n          let factorize (r : t_ext) : t_ext * bool =\n            let aux (r : t_ext)\n                    (calc : t_ext -> t_ext option * t_ext option)\n                    (concat_factors : t_ext -> t_ext -> t_ext)\n                    (factorize : t_ext -> t_ext list -> t_ext) : t_ext * bool =\n              match r with\n              | Union l ->\n                (* list of all regexp without the common factor *)\n                let max_left = ref l in\n                (* greatest common factor found *)\n                let max_factor = ref None in\n                let factor_not_found = ref true in\n                let has_been_factorized = ref false in\n                let () =\n                  while !factor_not_found do\n                    let all_factors, all_left = List.split\n                      @@ List.map calc !max_left\n                    in\n                    match get_rid_of_duplicate all_factors with\n                    | [] -> assert false (* No factor : issue *)\n                    | Some factor :: [] -> (\n                      has_been_factorized := true ;\n                      max_left := List.map (\n                        fun (left : t_ext option) : t_ext ->\n                          match left with\n                          | None -> Letter Lt.epsilon\n                          | Some r -> r\n                      )\n                      all_left ;\n                      match !max_factor with\n                      | None -> max_factor := Some factor    \n                      | Some old_factor -> \n                        max_factor := Some (concat_factors old_factor factor)\n                    )\n                    | None :: [] (* No factor found *)\n                    | _ -> factor_not_found := false (* More than one factor *)\n                  done\n                in \n                (\n                  match !max_factor with\n                  | None -> r, false\n                  | Some factor -> factorize factor !max_left, !has_been_factorized\n                )\n              | _ -> r, false\n            in\n            let r, is_factorized = aux r calc_prefix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ old_factor ; factor ]\n            )\n            (\n              fun (prefix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ prefix; Union left ]\n            )\n            in\n            let r, is_factorized' =  aux r calc_suffix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ factor ; old_factor ]\n            )\n            (\n              fun (suffix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ Union left; suffix ]\n            )\n            in\n            r, is_factorized || is_factorized'\n          in\n          match all_eps with \n          | [] -> (* no epsilon *)\n            let res, is_factorized = factorize @@ Union without_eps in\n            if is_factorized then (* else it will loop without an end *)\n              flatten @@ simp res\n            else \n              res\n          | _ -> (* at least one (singleton because we got rid of duplicates) *)\n            match without_eps with\n            | [] -> Letter Lt.epsilon (* it was an union of espilon (why not) *)\n            | r :: [] -> simp @@ Option r\n            | _ -> \n              let res, is_factorized = factorize @@ Union without_eps in\n              if is_factorized then\n                simp @@ Option (flatten @@ res)\n              else\n                simp @@ Option res\n\n        )\n      )\n    | Star r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Star (Letter l)\n        | Star r\n        | Plus r\n        | Option r -> Star r\n        | r -> Star r\n      end\n    | Plus r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Plus (Letter l)\n        | Star r\n        | Option r -> Star r\n        | Plus r -> Plus r\n        | r -> Plus r\n      end\n    | Option r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Option (Letter l)\n        | Star r\n        | Plus r -> Star r\n        | Option r -> Option r\n        | r -> Option r\n      end\n  in\n  simp @@ flatten r"}]}}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":93,"character":14}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 30, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":89,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 31, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":22}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 32, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":90,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 33, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":90,"character":22},"end":{"line":90,"character":22}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 34, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":91,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 35, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":91,"character":21},"end":{"line":91,"character":21}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 36, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":91,"character":37}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 37, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":91,"character":36},"end":{"line":91,"character":37}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 38, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml","version":112},"contentChanges":[{"text":"module Typ = Stt.Typ\ntype lt = Typ.t\n\ntype t_simp =\n  | S_Empty\n  | S_Letter of lt\n  | S_Concat of t_simp * t_simp\n  | S_Union of t_simp * t_simp\n  | S_Star of t_simp\ntype t_ext =\n  | Letter of lt\n  | Concat of t_ext list\n  | Union of t_ext list\n  | Star of t_ext\n  | Plus of t_ext\n  | Option of t_ext\n\n\n\nlet empty = S_Empty\n\nlet is_empty (r : t_simp) : bool =\n  r = empty\n\n\n\nlet letter (l : lt) : t_simp =\n  S_Letter l\n\nlet concat (r1 : t_simp) \n           (r2 : t_simp) : t_simp =\n  S_Concat (r1, r2)\n\nlet union (r1 : t_simp) \n          (r2 : t_simp) : t_simp =\n  S_Union (r1, r2)\n\nlet star (r : t_simp) : t_simp =\n  S_Star r\n\n\n\nlet rec simp_to_ext (r : t_simp) : t_ext =\n  match r with\n  | S_Empty -> failwith \"Can't convert the empty regex\"\n  | S_Letter l -> Letter l\n  | S_Concat (r1, r2) -> Concat [simp_to_ext r1; simp_to_ext r2]\n  | S_Union (r1, r2) -> Union [simp_to_ext r1; simp_to_ext r2]\n  | S_Star r -> Star (simp_to_ext r)\n\n\n\nlet rec flatten (r : t_ext) : t_ext =\n  match r with\n  | Letter _ -> r\n  | Concat l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Concat ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Concat (loop @@ List.map flatten l)\n  | Union l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Union ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Union (loop @@ List.map flatten l)\n  | Star r -> Star (flatten r)\n  | Plus r -> Plus (flatten r)\n  | Option r -> Option (flatten r)\n\nlet pp (r : t_ext) : string =\n  let rec loop (r : t_ext) : string =\n    match r with\n    | Letter l ->\n      let buf = Buffer.create 16 in\n      let fmt = Format.formatter_of_buffer buf in\n      let () = Syntax.Pretty.pp fmt l in\n      let () = Format.pp_print_newline fmt () in\n      Buffer.output_buffer Stdlib.stdout buf\n    | Concat l ->\n      String.concat \";\" @@ List.map loop l\n    | Union l ->\n      \"(\" ^ (String.concat \"|\" @@ List.map loop l) ^ \")\"\n    | Star r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"*\"\n        | _ -> \"(\" ^ loop r ^ \")*\"\n      )\n    | Plus r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"+\"\n        | _ -> \"(\" ^ loop r ^ \")+\"\n      )\n    | Option r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"?\"\n        | _ -> \"(\" ^ loop r ^ \")?\"\n      )\n  in\n  loop @@ flatten r\n\n\nlet get_rid_of_duplicate (l : 'a list) : 'a list =\n  List.rev @@ List.fold_left (\n    fun (acc : 'a list)\n        (elt : 'a) : 'a list ->\n      if List.mem elt acc then\n        acc\n      else\n        elt :: acc\n  )\n  [] l\n\nlet simplify (r : t_ext) : t_ext =\n  let rec simp (r : t_ext) : t_ext =\n    match r with\n    | Letter _ -> r\n    | Concat l ->\n      let l = List.map simp l in\n      let rec loop (l : t_ext list) : t_ext list =\n        match l with\n        | []\n        | _ :: [] -> l\n        | r1 :: r2 :: l ->\n          match r1, r2 with\n          | Star rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (Star rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Star rr1, rr2\n          | rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (simp @@ Plus rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt1, Letter lt2 ->\n              if Typ.is_empty lt1 then\n                loop @@ r2 :: l\n              else if Typ.is_empty lt2 then\n                loop @@ r1 :: l\n              else\n                List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt, _ ->\n            if Typ.is_empty lt then\n              loop @@ r2 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _, Letter lt ->\n            if Typ.is_empty lt then\n              loop @@ r1 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _ ->\n            List.cons r1 @@ loop @@ r2 :: l\n      in\n      ( \n        match loop l with\n        | [] -> failwith \"Empty concat is impossible\"\n        | r :: [] -> r\n        | l -> Concat l \n      )\n    | Union l ->\n      let unique_l = get_rid_of_duplicate @@ List.map simp l\n      in\n      (\n        match unique_l with\n        | [] -> failwith \"Empty union is impossible\"\n        | r :: [] -> r\n        | _ -> (\n          let (all_eps, without_eps) = List.partition (\n            fun (r : t_ext) : bool ->\n              match r with \n              | Letter lt -> Typ.is_empty lt \n              | _ -> false\n          ) \n          unique_l\n          in\n\n          (* Returns the prefix and what it comes next *)\n          let calc_prefix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r' :: next -> Some r', Some (Concat next)\n            )\n            | Plus r -> Some r, Some (Star r)\n            | _ -> Some r, None\n          in\n          (* Returns the suffix and what it comes before *)\n          let rec calc_suffix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r :: [] -> Some r, None \n              | r' :: next -> \n                let (suff, before) = calc_suffix @@ Concat next in\n                match before with\n                | None -> suff, Some r'\n                | Some before -> suff, Some (flatten @@ Concat [r'; before])\n            )\n            | Plus r -> Some (Star r), Some r\n            | _ -> Some r, None\n          in\n          (* Factorize \n\n              The boolean tells us if we can simplify the result, i.e\n                it has been factorized, thus changed (it prevents \n                looping infinitely when simplifying the new expression)\n          *)\n          let factorize (r : t_ext) : t_ext * bool =\n            let aux (r : t_ext)\n                    (calc : t_ext -> t_ext option * t_ext option)\n                    (concat_factors : t_ext -> t_ext -> t_ext)\n                    (factorize : t_ext -> t_ext list -> t_ext) : t_ext * bool =\n              match r with\n              | Union l ->\n                (* list of all regexp without the common factor *)\n                let max_left = ref l in\n                (* greatest common factor found *)\n                let max_factor = ref None in\n                let factor_not_found = ref true in\n                let has_been_factorized = ref false in\n                let () =\n                  while !factor_not_found do\n                    let all_factors, all_left = List.split\n                      @@ List.map calc !max_left\n                    in\n                    match get_rid_of_duplicate all_factors with\n                    | [] -> assert false (* No factor : issue *)\n                    | Some factor :: [] -> (\n                      has_been_factorized := true ;\n                      max_left := List.map (\n                        fun (left : t_ext option) : t_ext ->\n                          match left with\n                          | None -> Letter Lt.epsilon\n                          | Some r -> r\n                      )\n                      all_left ;\n                      match !max_factor with\n                      | None -> max_factor := Some factor    \n                      | Some old_factor -> \n                        max_factor := Some (concat_factors old_factor factor)\n                    )\n                    | None :: [] (* No factor found *)\n                    | _ -> factor_not_found := false (* More than one factor *)\n                  done\n                in \n                (\n                  match !max_factor with\n                  | None -> r, false\n                  | Some factor -> factorize factor !max_left, !has_been_factorized\n                )\n              | _ -> r, false\n            in\n            let r, is_factorized = aux r calc_prefix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ old_factor ; factor ]\n            )\n            (\n              fun (prefix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ prefix; Union left ]\n            )\n            in\n            let r, is_factorized' =  aux r calc_suffix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ factor ; old_factor ]\n            )\n            (\n              fun (suffix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ Union left; suffix ]\n            )\n            in\n            r, is_factorized || is_factorized'\n          in\n          match all_eps with \n          | [] -> (* no epsilon *)\n            let res, is_factorized = factorize @@ Union without_eps in\n            if is_factorized then (* else it will loop without an end *)\n              flatten @@ simp res\n            else \n              res\n          | _ -> (* at least one (singleton because we got rid of duplicates) *)\n            match without_eps with\n            | [] -> Letter Lt.epsilon (* it was an union of espilon (why not) *)\n            | r :: [] -> simp @@ Option r\n            | _ -> \n              let res, is_factorized = factorize @@ Union without_eps in\n              if is_factorized then\n                simp @@ Option (flatten @@ res)\n              else\n                simp @@ Option res\n\n        )\n      )\n    | Star r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Star (Letter l)\n        | Star r\n        | Plus r\n        | Option r -> Star r\n        | r -> Star r\n      end\n    | Plus r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Plus (Letter l)\n        | Star r\n        | Option r -> Star r\n        | Plus r -> Plus r\n        | r -> Plus r\n      end\n    | Option r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Option (Letter l)\n        | Star r\n        | Plus r -> Star r\n        | Option r -> Option r\n        | r -> Option r\n      end\n  in\n  simp @@ flatten r"}]}}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":91,"character":37}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 39, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":93,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 40, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":93,"character":28},"end":{"line":93,"character":28}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 41, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":91,"character":37},"end":{"line":91,"character":37}},"context":{"diagnostics":[],"triggerKind":1,"only":["refactor","source"]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 42, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":91,"character":37},"end":{"line":91,"character":37}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0159740447998ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 43, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":92,"character":48}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 44, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":92,"character":48},"end":{"line":92,"character":48}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 45, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":93,"character":44}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 46, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":93,"character":44},"end":{"line":93,"character":44}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 47, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":92,"character":48}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 48, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":92,"character":48},"end":{"line":93,"character":44}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 49, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml","version":115},"contentChanges":[{"text":"module Typ = Stt.Typ\ntype lt = Typ.t\n\ntype t_simp =\n  | S_Empty\n  | S_Letter of lt\n  | S_Concat of t_simp * t_simp\n  | S_Union of t_simp * t_simp\n  | S_Star of t_simp\ntype t_ext =\n  | Letter of lt\n  | Concat of t_ext list\n  | Union of t_ext list\n  | Star of t_ext\n  | Plus of t_ext\n  | Option of t_ext\n\n\n\nlet empty = S_Empty\n\nlet is_empty (r : t_simp) : bool =\n  r = empty\n\n\n\nlet letter (l : lt) : t_simp =\n  S_Letter l\n\nlet concat (r1 : t_simp) \n           (r2 : t_simp) : t_simp =\n  S_Concat (r1, r2)\n\nlet union (r1 : t_simp) \n          (r2 : t_simp) : t_simp =\n  S_Union (r1, r2)\n\nlet star (r : t_simp) : t_simp =\n  S_Star r\n\n\n\nlet rec simp_to_ext (r : t_simp) : t_ext =\n  match r with\n  | S_Empty -> failwith \"Can't convert the empty regex\"\n  | S_Letter l -> Letter l\n  | S_Concat (r1, r2) -> Concat [simp_to_ext r1; simp_to_ext r2]\n  | S_Union (r1, r2) -> Union [simp_to_ext r1; simp_to_ext r2]\n  | S_Star r -> Star (simp_to_ext r)\n\n\n\nlet rec flatten (r : t_ext) : t_ext =\n  match r with\n  | Letter _ -> r\n  | Concat l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Concat ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Concat (loop @@ List.map flatten l)\n  | Union l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Union ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Union (loop @@ List.map flatten l)\n  | Star r -> Star (flatten r)\n  | Plus r -> Plus (flatten r)\n  | Option r -> Option (flatten r)\n\nlet pp (r : t_ext) : string =\n  let rec loop (r : t_ext) : string =\n    match r with\n    | Letter l ->\n      let buf = Buffer.create 16 in\n      let fmt = Format.formatter_of_buffer buf in\n      let () = Syntax.Pretty.pp fmt l in\n      let () = Format.pp_print_newline fmt () in\n      \n    | Concat l ->\n      String.concat \";\" @@ List.map loop l\n    | Union l ->\n      \"(\" ^ (String.concat \"|\" @@ List.map loop l) ^ \")\"\n    | Star r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"*\"\n        | _ -> \"(\" ^ loop r ^ \")*\"\n      )\n    | Plus r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"+\"\n        | _ -> \"(\" ^ loop r ^ \")+\"\n      )\n    | Option r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"?\"\n        | _ -> \"(\" ^ loop r ^ \")?\"\n      )\n  in\n  loop @@ flatten r\n\n\nlet get_rid_of_duplicate (l : 'a list) : 'a list =\n  List.rev @@ List.fold_left (\n    fun (acc : 'a list)\n        (elt : 'a) : 'a list ->\n      if List.mem elt acc then\n        acc\n      else\n        elt :: acc\n  )\n  [] l\n\nlet simplify (r : t_ext) : t_ext =\n  let rec simp (r : t_ext) : t_ext =\n    match r with\n    | Letter _ -> r\n    | Concat l ->\n      let l = List.map simp l in\n      let rec loop (l : t_ext list) : t_ext list =\n        match l with\n        | []\n        | _ :: [] -> l\n        | r1 :: r2 :: l ->\n          match r1, r2 with\n          | Star rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (Star rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Star rr1, rr2\n          | rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (simp @@ Plus rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt1, Letter lt2 ->\n              if Typ.is_empty lt1 then\n                loop @@ r2 :: l\n              else if Typ.is_empty lt2 then\n                loop @@ r1 :: l\n              else\n                List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt, _ ->\n            if Typ.is_empty lt then\n              loop @@ r2 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _, Letter lt ->\n            if Typ.is_empty lt then\n              loop @@ r1 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _ ->\n            List.cons r1 @@ loop @@ r2 :: l\n      in\n      ( \n        match loop l with\n        | [] -> failwith \"Empty concat is impossible\"\n        | r :: [] -> r\n        | l -> Concat l \n      )\n    | Union l ->\n      let unique_l = get_rid_of_duplicate @@ List.map simp l\n      in\n      (\n        match unique_l with\n        | [] -> failwith \"Empty union is impossible\"\n        | r :: [] -> r\n        | _ -> (\n          let (all_eps, without_eps) = List.partition (\n            fun (r : t_ext) : bool ->\n              match r with \n              | Letter lt -> Typ.is_empty lt \n              | _ -> false\n          ) \n          unique_l\n          in\n\n          (* Returns the prefix and what it comes next *)\n          let calc_prefix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r' :: next -> Some r', Some (Concat next)\n            )\n            | Plus r -> Some r, Some (Star r)\n            | _ -> Some r, None\n          in\n          (* Returns the suffix and what it comes before *)\n          let rec calc_suffix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r :: [] -> Some r, None \n              | r' :: next -> \n                let (suff, before) = calc_suffix @@ Concat next in\n                match before with\n                | None -> suff, Some r'\n                | Some before -> suff, Some (flatten @@ Concat [r'; before])\n            )\n            | Plus r -> Some (Star r), Some r\n            | _ -> Some r, None\n          in\n          (* Factorize \n\n              The boolean tells us if we can simplify the result, i.e\n                it has been factorized, thus changed (it prevents \n                looping infinitely when simplifying the new expression)\n          *)\n          let factorize (r : t_ext) : t_ext * bool =\n            let aux (r : t_ext)\n                    (calc : t_ext -> t_ext option * t_ext option)\n                    (concat_factors : t_ext -> t_ext -> t_ext)\n                    (factorize : t_ext -> t_ext list -> t_ext) : t_ext * bool =\n              match r with\n              | Union l ->\n                (* list of all regexp without the common factor *)\n                let max_left = ref l in\n                (* greatest common factor found *)\n                let max_factor = ref None in\n                let factor_not_found = ref true in\n                let has_been_factorized = ref false in\n                let () =\n                  while !factor_not_found do\n                    let all_factors, all_left = List.split\n                      @@ List.map calc !max_left\n                    in\n                    match get_rid_of_duplicate all_factors with\n                    | [] -> assert false (* No factor : issue *)\n                    | Some factor :: [] -> (\n                      has_been_factorized := true ;\n                      max_left := List.map (\n                        fun (left : t_ext option) : t_ext ->\n                          match left with\n                          | None -> Letter Lt.epsilon\n                          | Some r -> r\n                      )\n                      all_left ;\n                      match !max_factor with\n                      | None -> max_factor := Some factor    \n                      | Some old_factor -> \n                        max_factor := Some (concat_factors old_factor factor)\n                    )\n                    | None :: [] (* No factor found *)\n                    | _ -> factor_not_found := false (* More than one factor *)\n                  done\n                in \n                (\n                  match !max_factor with\n                  | None -> r, false\n                  | Some factor -> factorize factor !max_left, !has_been_factorized\n                )\n              | _ -> r, false\n            in\n            let r, is_factorized = aux r calc_prefix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ old_factor ; factor ]\n            )\n            (\n              fun (prefix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ prefix; Union left ]\n            )\n            in\n            let r, is_factorized' =  aux r calc_suffix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ factor ; old_factor ]\n            )\n            (\n              fun (suffix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ Union left; suffix ]\n            )\n            in\n            r, is_factorized || is_factorized'\n          in\n          match all_eps with \n          | [] -> (* no epsilon *)\n            let res, is_factorized = factorize @@ Union without_eps in\n            if is_factorized then (* else it will loop without an end *)\n              flatten @@ simp res\n            else \n              res\n          | _ -> (* at least one (singleton because we got rid of duplicates) *)\n            match without_eps with\n            | [] -> Letter Lt.epsilon (* it was an union of espilon (why not) *)\n            | r :: [] -> simp @@ Option r\n            | _ -> \n              let res, is_factorized = factorize @@ Union without_eps in\n              if is_factorized then\n                simp @@ Option (flatten @@ res)\n              else\n                simp @@ Option res\n\n        )\n      )\n    | Star r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Star (Letter l)\n        | Star r\n        | Plus r\n        | Option r -> Star r\n        | r -> Star r\n      end\n    | Plus r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Plus (Letter l)\n        | Star r\n        | Option r -> Star r\n        | Plus r -> Plus r\n        | r -> Plus r\n      end\n    | Option r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Option (Letter l)\n        | Star r\n        | Plus r -> Star r\n        | Option r -> Option r\n        | r -> Option r\n      end\n  in\n  simp @@ flatten r"}]}}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":93,"character":6}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 50, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml","version":116},"contentChanges":[{"text":"module Typ = Stt.Typ\ntype lt = Typ.t\n\ntype t_simp =\n  | S_Empty\n  | S_Letter of lt\n  | S_Concat of t_simp * t_simp\n  | S_Union of t_simp * t_simp\n  | S_Star of t_simp\ntype t_ext =\n  | Letter of lt\n  | Concat of t_ext list\n  | Union of t_ext list\n  | Star of t_ext\n  | Plus of t_ext\n  | Option of t_ext\n\n\n\nlet empty = S_Empty\n\nlet is_empty (r : t_simp) : bool =\n  r = empty\n\n\n\nlet letter (l : lt) : t_simp =\n  S_Letter l\n\nlet concat (r1 : t_simp) \n           (r2 : t_simp) : t_simp =\n  S_Concat (r1, r2)\n\nlet union (r1 : t_simp) \n          (r2 : t_simp) : t_simp =\n  S_Union (r1, r2)\n\nlet star (r : t_simp) : t_simp =\n  S_Star r\n\n\n\nlet rec simp_to_ext (r : t_simp) : t_ext =\n  match r with\n  | S_Empty -> failwith \"Can't convert the empty regex\"\n  | S_Letter l -> Letter l\n  | S_Concat (r1, r2) -> Concat [simp_to_ext r1; simp_to_ext r2]\n  | S_Union (r1, r2) -> Union [simp_to_ext r1; simp_to_ext r2]\n  | S_Star r -> Star (simp_to_ext r)\n\n\n\nlet rec flatten (r : t_ext) : t_ext =\n  match r with\n  | Letter _ -> r\n  | Concat l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Concat ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Concat (loop @@ List.map flatten l)\n  | Union l ->\n    let rec loop (l : t_ext list) : t_ext list =\n      match l with\n      | [] -> []\n      | r :: l ->\n        begin\n          match r with\n          | Union ll ->\n            List.append ll @@ loop l\n          | _ -> r :: loop l\n        end\n    in\n    Union (loop @@ List.map flatten l)\n  | Star r -> Star (flatten r)\n  | Plus r -> Plus (flatten r)\n  | Option r -> Option (flatten r)\n\nlet pp (r : t_ext) : string =\n  let rec loop (r : t_ext) : string =\n    match r with\n    | Letter l ->\n      let buf = Buffer.create 16 in\n      let fmt = Format.formatter_of_buffer buf in\n      let () = Syntax.Pretty.pp fmt l in\n      let () = Format.pp_print_newline fmt () in\n      \"\"\n    | Concat l ->\n      String.concat \";\" @@ List.map loop l\n    | Union l ->\n      \"(\" ^ (String.concat \"|\" @@ List.map loop l) ^ \")\"\n    | Star r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"*\"\n        | _ -> \"(\" ^ loop r ^ \")*\"\n      )\n    | Plus r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"+\"\n        | _ -> \"(\" ^ loop r ^ \")+\"\n      )\n    | Option r -> (\n        match r with\n        | Letter _\n        | Union _ -> loop r ^ \"?\"\n        | _ -> \"(\" ^ loop r ^ \")?\"\n      )\n  in\n  loop @@ flatten r\n\n\nlet get_rid_of_duplicate (l : 'a list) : 'a list =\n  List.rev @@ List.fold_left (\n    fun (acc : 'a list)\n        (elt : 'a) : 'a list ->\n      if List.mem elt acc then\n        acc\n      else\n        elt :: acc\n  )\n  [] l\n\nlet simplify (r : t_ext) : t_ext =\n  let rec simp (r : t_ext) : t_ext =\n    match r with\n    | Letter _ -> r\n    | Concat l ->\n      let l = List.map simp l in\n      let rec loop (l : t_ext list) : t_ext list =\n        match l with\n        | []\n        | _ :: [] -> l\n        | r1 :: r2 :: l ->\n          match r1, r2 with\n          | Star rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (Star rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Star rr1, rr2\n          | rr1, Star rr2 ->\n            if rr1 = rr2 then\n              loop @@ (simp @@ Plus rr1) :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt1, Letter lt2 ->\n              if Typ.is_empty lt1 then\n                loop @@ r2 :: l\n              else if Typ.is_empty lt2 then\n                loop @@ r1 :: l\n              else\n                List.cons r1 @@ loop @@ r2 :: l\n          | Letter lt, _ ->\n            if Typ.is_empty lt then\n              loop @@ r2 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _, Letter lt ->\n            if Typ.is_empty lt then\n              loop @@ r1 :: l\n            else\n              List.cons r1 @@ loop @@ r2 :: l\n          | _ ->\n            List.cons r1 @@ loop @@ r2 :: l\n      in\n      ( \n        match loop l with\n        | [] -> failwith \"Empty concat is impossible\"\n        | r :: [] -> r\n        | l -> Concat l \n      )\n    | Union l ->\n      let unique_l = get_rid_of_duplicate @@ List.map simp l\n      in\n      (\n        match unique_l with\n        | [] -> failwith \"Empty union is impossible\"\n        | r :: [] -> r\n        | _ -> (\n          let (all_eps, without_eps) = List.partition (\n            fun (r : t_ext) : bool ->\n              match r with \n              | Letter lt -> Typ.is_empty lt \n              | _ -> false\n          ) \n          unique_l\n          in\n\n          (* Returns the prefix and what it comes next *)\n          let calc_prefix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r' :: next -> Some r', Some (Concat next)\n            )\n            | Plus r -> Some r, Some (Star r)\n            | _ -> Some r, None\n          in\n          (* Returns the suffix and what it comes before *)\n          let rec calc_suffix (r : t_ext) : t_ext option * t_ext option =\n            match r with\n            | Concat l -> (\n              match l with\n              | [] -> None, None\n              | r :: [] -> Some r, None \n              | r' :: next -> \n                let (suff, before) = calc_suffix @@ Concat next in\n                match before with\n                | None -> suff, Some r'\n                | Some before -> suff, Some (flatten @@ Concat [r'; before])\n            )\n            | Plus r -> Some (Star r), Some r\n            | _ -> Some r, None\n          in\n          (* Factorize \n\n              The boolean tells us if we can simplify the result, i.e\n                it has been factorized, thus changed (it prevents \n                looping infinitely when simplifying the new expression)\n          *)\n          let factorize (r : t_ext) : t_ext * bool =\n            let aux (r : t_ext)\n                    (calc : t_ext -> t_ext option * t_ext option)\n                    (concat_factors : t_ext -> t_ext -> t_ext)\n                    (factorize : t_ext -> t_ext list -> t_ext) : t_ext * bool =\n              match r with\n              | Union l ->\n                (* list of all regexp without the common factor *)\n                let max_left = ref l in\n                (* greatest common factor found *)\n                let max_factor = ref None in\n                let factor_not_found = ref true in\n                let has_been_factorized = ref false in\n                let () =\n                  while !factor_not_found do\n                    let all_factors, all_left = List.split\n                      @@ List.map calc !max_left\n                    in\n                    match get_rid_of_duplicate all_factors with\n                    | [] -> assert false (* No factor : issue *)\n                    | Some factor :: [] -> (\n                      has_been_factorized := true ;\n                      max_left := List.map (\n                        fun (left : t_ext option) : t_ext ->\n                          match left with\n                          | None -> Letter Lt.epsilon\n                          | Some r -> r\n                      )\n                      all_left ;\n                      match !max_factor with\n                      | None -> max_factor := Some factor    \n                      | Some old_factor -> \n                        max_factor := Some (concat_factors old_factor factor)\n                    )\n                    | None :: [] (* No factor found *)\n                    | _ -> factor_not_found := false (* More than one factor *)\n                  done\n                in \n                (\n                  match !max_factor with\n                  | None -> r, false\n                  | Some factor -> factorize factor !max_left, !has_been_factorized\n                )\n              | _ -> r, false\n            in\n            let r, is_factorized = aux r calc_prefix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ old_factor ; factor ]\n            )\n            (\n              fun (prefix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ prefix; Union left ]\n            )\n            in\n            let r, is_factorized' =  aux r calc_suffix\n            (\n              fun (old_factor : t_ext)\n                  (factor : t_ext) : t_ext ->\n                Concat [ factor ; old_factor ]\n            )\n            (\n              fun (suffix : t_ext)\n                  (left : t_ext list) : t_ext ->\n                Concat [ Union left; suffix ]\n            )\n            in\n            r, is_factorized || is_factorized'\n          in\n          match all_eps with \n          | [] -> (* no epsilon *)\n            let res, is_factorized = factorize @@ Union without_eps in\n            if is_factorized then (* else it will loop without an end *)\n              flatten @@ simp res\n            else \n              res\n          | _ -> (* at least one (singleton because we got rid of duplicates) *)\n            match without_eps with\n            | [] -> Letter Lt.epsilon (* it was an union of espilon (why not) *)\n            | r :: [] -> simp @@ Option r\n            | _ -> \n              let res, is_factorized = factorize @@ Union without_eps in\n              if is_factorized then\n                simp @@ Option (flatten @@ res)\n              else\n                simp @@ Option res\n\n        )\n      )\n    | Star r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Star (Letter l)\n        | Star r\n        | Plus r\n        | Option r -> Star r\n        | r -> Star r\n      end\n    | Plus r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Plus (Letter l)\n        | Star r\n        | Option r -> Star r\n        | Plus r -> Plus r\n        | r -> Plus r\n      end\n    | Option r ->\n      begin\n        match simp r with\n        | Letter l ->\n          if Typ.is_empty l then\n            Letter l\n          else\n            Option (Letter l)\n        | Star r\n        | Plus r -> Star r\n        | Option r -> Option r\n        | r -> Option r\n      end\n  in\n  simp @@ flatten r"}]}}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":93,"character":7}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 51, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":93,"character":7},"end":{"line":93,"character":7}},"context":{"diagnostics":[],"triggerKind":1,"only":["refactor","source"]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 52, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":93,"character":7},"end":{"line":93,"character":7}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 53, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"position":{"line":82,"character":30}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 54, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":82,"character":30},"end":{"line":82,"character":30}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0121593475342ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 55, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":4},"end":{"line":16,"character":42}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 56, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":57,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":16,"character":42}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 57, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":16,"character":42},"end":{"line":16,"character":42}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 58, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":59,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 59, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":5},"end":{"line":16,"character":42}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 60, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":61,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 61, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":4},"end":{"line":16,"character":42}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 62, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":63,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":14,"character":38}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 63, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":14,"character":38},"end":{"line":14,"character":38}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 64, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":65,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":14,"character":38}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 65, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":14,"character":38},"end":{"line":16,"character":42}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 66, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":67,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":14,"character":36}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 67, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":14,"character":36},"end":{"line":16,"character":42}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 68, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":2},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n    let buf = Buffer.create 16 in\n    let fmt = Format.formatter_of_buffer buf in\n    let () = Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":69,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":14,"character":35}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 69, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":70,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 70, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":71,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":4},"end":{"line":13,"character":47}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00619888305664ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 71, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":3},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n    \n    let () = Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":72,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 72, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":73,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 73, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":74,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":4},"end":{"line":13,"character":13}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 74, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":75,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":11,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 75, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":11,"character":34},"end":{"line":13,"character":13}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 76, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":77,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":11,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 77, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":11,"character":34},"end":{"line":11,"character":34}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 78, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":4},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":6},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":79,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":2}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 79, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":13},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":80,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/completion
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 80, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":80}}
Read message 
{"jsonrpc":"2.0","id":81,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 81, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":82,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 82, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":19},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prtinfSyntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":83,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":15}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 83, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":28},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":84,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":16}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 84, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":29},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"%Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":85,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":17}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0128746032715ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 85, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":30},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"%sSyntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":86,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0121593475342ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 86, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":33},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"%s\\n@Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":87,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":21}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 87, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":34},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"%s\\n@\"Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":88,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 88, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":35},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"%s\\n@\" Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":89,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":23}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00619888305664ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 89, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":90,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 90, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":18},"end":{"line":12,"character":18}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 91, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":37},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"%a\\n@\" Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":92,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":18}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 92, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":92}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":93,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":18}}}
[server] Got a method textDocument/completion
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 93, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":94,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":20}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 94, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":20},"end":{"line":12,"character":20}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 95, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":96,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 96, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":22},"end":{"line":12,"character":22}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0112056732178ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 97, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":38},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"%a\\n@\" (Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":98,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":24},"context":{"triggerKind":2,"isRetrigger":false,"triggerCharacter":"("}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.00977516174316ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 98, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":99,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":24}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00715255737305ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 99, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":100,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":40}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 100, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":40},"end":{"line":12,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 101, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":102,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":30}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 102, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":103,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":30},"end":{"line":12,"character":30}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 103, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":104,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":24}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 104, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":24},"end":{"line":12,"character":24}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 105, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":39},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"%a\\n@\" Syntax.Pretty.pp fmt t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":106,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":23}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 106, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":107,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":39}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00882148742676ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 107, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":39},"end":{"line":12,"character":39}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 108, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":109,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":43}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 109, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":110,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":43},"end":{"line":12,"character":43}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 110, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":43},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.prinf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":111,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":39}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 111, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":44},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.printf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":112,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":14}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 112, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":113,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":28}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 113, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":28},"end":{"line":12,"character":28}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0131130218506ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 114, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 115, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":27},"end":{"line":12,"character":27}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 116, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":117,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.0810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 117, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":118,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 118, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":15},"end":{"line":12,"character":15}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0112056732178ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 119, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":120,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 120, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":8}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 121, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":122,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 122, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":123,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":9},"end":{"line":12,"character":9}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 123, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":124,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 124, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":45},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":125,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 125, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":126,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 126, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":127,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":8}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 127, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":47},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  F.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":128,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 128, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":48},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Fo.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":129,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/completion
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 129, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":129}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":130,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/completion
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 130, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":52},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Format.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":131,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 131, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":132,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 132, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0128746032715ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 133, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":57},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Format.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":134,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0128746032715ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 134, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":58},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Format.aprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":135,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 135, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":59},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Format.adprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":136,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 136, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":61},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Format.printf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":137,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00619888305664ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 137, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":62},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Format.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":138,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 138, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":139,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 139, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":140,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":8}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00381469726562ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 140, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":69},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Printf.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":82,"character":30},"end":{"line":82,"character":30}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 141, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":142,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":8}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 142, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":143,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"position":{"line":56,"character":95}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 143, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":144,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":56,"character":95},"end":{"line":56,"character":95}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 144, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":145,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":8}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 145, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":146,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"position":{"line":58,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0112056732178ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 146, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":147,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":58,"character":24},"end":{"line":58,"character":24}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00381469726562ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 147, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":148,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/regexp.ml"},"range":{"start":{"line":82,"character":30},"end":{"line":82,"character":30}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 148, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":8}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 149, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":150,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.0128746032715ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 150, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":151,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":6}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 151, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":72},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Fo.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":152,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 152, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":152}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":153,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/completion
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 153, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":76},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Format.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":154,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 154, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":155,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/completion
[server] processing took 0.0200271606445ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 155, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":155}}
Read message 
{"jsonrpc":"2.0","id":156,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/completion
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 156, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":157,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":16}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 157, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":158,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":16},"end":{"line":12,"character":16}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 158, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":159,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":19}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 159, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":19}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00381469726562ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 160, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":161,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":13,"character":0}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 161, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":162,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 162, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":163,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":28}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 163, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":164,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":28},"end":{"line":12,"character":28}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 164, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":165,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":20}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 165, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":166,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":20},"end":{"line":12,"character":20}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 166, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":167,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":41}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 167, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":25},"end":{"line":12,"character":41}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 168, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":78},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Format.fprintf \"%a\\n@\" (Syntax.Pretty.pp) t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":169,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":26},"context":{"triggerKind":2,"isRetrigger":false,"triggerCharacter":"("}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 169, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":170,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":42}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 170, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":80},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) : unit =\n  Format.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","id":171,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":41}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 171, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":25},"end":{"line":12,"character":41}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 172, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":173,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":19}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 173, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":174,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":19}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 174, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":175,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 175, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":176,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":22},"end":{"line":12,"character":22}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 176, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":177,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 177, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":26},"end":{"line":12,"character":26}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 178, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":179,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":26}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 179, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":180,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":11,"character":32}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 180, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":11,"character":28},"end":{"line":11,"character":32}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 181, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":182,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":11,"character":31}}}
[server] Got a method textDocument/hover
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 182, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":183,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":11,"character":31},"end":{"line":11,"character":31}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 183, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":84},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Format.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":184,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":11,"character":25}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 184, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":185,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":15,"character":0}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 185, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":15,"character":0},"end":{"line":53,"character":10}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 186, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":187,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":14,"character":0}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0150203704834ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 187, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":14,"character":0},"end":{"line":53,"character":10}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0159740447998ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 188, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":86},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Format.fprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":189,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":14,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 189, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":190,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":14,"character":3},"end":{"line":53,"character":10}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 190, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":191,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 191, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":192,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":17},"end":{"line":12,"character":17}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00381469726562ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 192, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":193,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 193, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 194, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":195,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":2}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 195, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":196,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":10}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 196, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":93},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printdprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":197,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0131130218506ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 197, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":96},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printf.printf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":198,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/completion
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 198, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":198}}
Read message 
{"jsonrpc":"2.0","id":199,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 199, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":200,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00286102294922ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 200, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":201,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 201, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":202,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":34},"end":{"line":12,"character":34}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 202, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":203,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":39}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 203, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":204,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":39},"end":{"line":12,"character":39}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 204, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":205,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":40}}}
[server] Got a method textDocument/hover
[server] processing took 0.00977516174316ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 205, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":40},"end":{"line":12,"character":40}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 206, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":207,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 207, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":8}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 208, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":99},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Fo.printf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":209,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/completion
[server] processing took 0.00381469726562ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 209, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":209}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":210,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":4}}}
[server] Got a method textDocument/completion
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 210, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":103},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Format.printf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":211,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":15}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0128746032715ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 211, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":212,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":15},"end":{"line":12,"character":15}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 212, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":104},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Format.sprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":213,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 213, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":214,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 214, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":215,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":34},"end":{"line":12,"character":34}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 215, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":216,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 216, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":217,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 217, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":218,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 218, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":219,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 219, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":220,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":9}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 220, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":105},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Format.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":221,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00309944152832ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 221, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":222,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":29}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 222, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":223,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":29},"end":{"line":12,"character":29}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 223, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":224,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":2}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00786781311035ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 224, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":225,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":2}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 225, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":226,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 226, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":106},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n   Format.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":227,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0112056732178ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 227, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":107},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Format.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":228,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":2}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 228, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":110},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  ForFormat.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":229,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 229, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":113},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  FormatFormat.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":230,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 230, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":114},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Format.Format.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":231,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/completion
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 231, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":231}}
Read message 
{"jsonrpc":"2.0","id":232,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/completion
[server] processing took 0.0338554382324ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 232, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":233,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 233, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":234,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":2}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 234, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":235,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":2},"end":{"line":12,"character":9}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 235, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":122},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printf.Format.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Read message 
{"jsonrpc":"2.0","id":236,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/completion
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 236, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":236}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":237,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":9}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 237, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":128},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printf.printfFormat.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":238,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":15}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00977516174316ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 238, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":130},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printf.printf \"Format.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":239,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":17}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 239, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":134},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printf.printf \"%s\\nFormat.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":240,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":21}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 240, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":135},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printf.printf \"%s\\n\"Format.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":241,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":22}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 241, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":139},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printf.printf \"%s\\n\" @@ Format.asprintf \"%a\\n@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":242,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":26}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 242, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":141},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printf.printf \"%s\\n\" @@ Format.asprintf \"%a@\" Syntax.Pretty.pp t\n\n(* let _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print *)"}]}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":243,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":45}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00381469726562ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 243, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":244,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":38}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 244, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":245,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":38},"end":{"line":12,"character":38}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 245, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":246,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":53,"character":13}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0388622283936ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 246, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":247,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":14,"character":0},"end":{"line":53,"character":13}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 247, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml","version":143},"contentChanges":[{"text":"let env = ref Syntax.Typing.default\n\nlet parse_type (s : string) : Stt.Typ.t =\n  let lexbuf = Sedlexing.Utf8.from_string s in\n  match Syntax.Parser.typ_decl lexbuf with\n    Error msg -> Format.eprintf \"ERROR: %s@\\n\" msg; exit 1\n  | Ok (_, t_ast) ->\n    let t, env' = Syntax.Typing.(type_decl !env t_ast) in\n    let () = env := env' in\n    t.Syntax.Typing.typ\n\nlet print (t : Stt.Typ.t) =\n  Printf.printf \"%s\\n\" @@ Format.asprintf \"%a@\" Syntax.Pretty.pp t\n\nlet _ = parse_type \"type tnothing0 = Int | Bool\" \n  |> print\nlet _ = parse_type \"type tnothing1 = Int & Bool\"\n  |> print\nlet _ = parse_type \"type tnothing2 = Int -> Bool\"\n  |> print\nlet _ = parse_type \"type tnothing3 = (Int, Bool)\"\n  |> print\nlet _ = parse_type \"type tnothing4 = (Int, Bool) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing5 = Int -> Unit -> Char -> (Bool, (Char -> Bool)) -> `nil\"\n  |> print\nlet _ = parse_type \"type tnothing6 = Int\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tstar0 = [ Int* ]\" \n  |> print\nlet _ = parse_type \"type tstar1 = X where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tplus0 = [ Int+ ]\"\n  |> print\nlet _ = parse_type \"type tplus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tconcat_star_to_plus0 = [ Int;Int* ]\"\n  |> print\nlet _ = parse_type \"type tconcat_star_to_plus1 = (Int, X) where X = (Int, X) | `nil\"\n  |> print\n\nlet () = print_endline \"\"\n\nlet _ = parse_type \"type tfactorize = [ Int;Int;Bool;Int | Int;Int;Int | Int;Int;Bool*;Int;Bool;Int ]\"\n  |> print"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":248,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":53,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 248, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":249,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":12,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 249, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":250,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":11},"end":{"line":12,"character":11}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 250, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":251,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":12,"character":11},"end":{"line":12,"character":11}},"context":{"diagnostics":[],"triggerKind":1,"only":["refactor","source"]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 251, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":252,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":9,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 252, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":253,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":9,"character":11},"end":{"line":9,"character":11}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 253, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":254,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"position":{"line":19,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 254, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":255,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":10}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 255, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":256,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/test.ml"},"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":10}},"context":{"diagnostics":[],"triggerKind":1,"only":["refactor","source"]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 256, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/.merlin"}}
