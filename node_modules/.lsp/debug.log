Hello - from /home/p9romain/Téléchargements/Dev/ST3/rls-linux/reason-language-server
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 1, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml","languageId":"ocaml","version":0,"text":"open Format\nopen Stt\nmodule Name = Base.Hstring\n\ntype t =\n    Printer of (formatter -> unit)\n  | Pair of t * t\n  | Arrow of t * t\n  | Cup of t list (* invariant cup/cap list have length >= 1 *)\n  | Cap of t list\n  | Diff of t * t\n  | Neg of t\n  (*  | Apply of Name.t * t list *)\n  | Rec of t * (Name.t * t) list\n\nmodule Prio : sig\n  type level = private int\n  val level : t -> level\n  val lowest : level\nend =\nstruct\n  type level = int\n  let lowest = 0\n  let level = function\n      Printer _ | Pair _ (* | Apply _ *) -> 10\n    | Neg _-> 9\n    | Cap _ | Diff _ -> 8\n    | Cup _ -> 7\n    | Arrow _ -> 6\n    | Rec _ -> 5\nend\n\nlet var v = Printer (dprintf \"%a\" Var.pp v)\nlet name v = Printer (dprintf \"%s\" Name.(!!v))\nlet any = Printer (dprintf \"Any\")\nlet empty_ = Printer (dprintf \"Empty\")\n\nlet rec pr ?(assoc=true) parent_level  ppf t =\n  let level = Prio.level t in\n  let do_parens = level < parent_level ||\n                  (level = parent_level && not assoc)\n  in\n  fprintf ppf \"@[\";\n  if do_parens then fprintf ppf \"(\";\n  let () =\n    match t with\n      Printer f -> fprintf ppf \"%t\" f\n    | Pair (t1, t2) -> fprintf ppf \"(%a,@ %a)\" (pr level) t1 (pr level) t2\n    | Arrow (t1, t2) -> fprintf ppf \"%a@ ->@ %a\" (pr ~assoc:false level) t1 (pr level) t2\n    | Cup l -> fprintf ppf \"@[%a@]\" (pr_list_sep ~sep:\" |\" level) l\n    | Cap l -> fprintf ppf \"@[%a@]\" (pr_list_sep ~sep:\" &\" level) l\n    | Diff (t1, t2) -> fprintf ppf \"%a@ \\\\@ %a\" (pr level) t1 (pr ~assoc:false level) t2\n    | Neg t -> fprintf ppf \"~%a\" (pr level) t\n    (*\n    | Apply (n, args) -> fprintf ppf \"%s (@[%a@])\" Name.(!!n) (pr_list_sep ~sep:\",\" Prio.lowest) args\n    *)\n    | Rec (t, defs) -> fprintf ppf \"%a@ where@ @[%a@]\" (pr level) t pr_defs defs\n  in\n  if do_parens then fprintf ppf \")\";\n  fprintf ppf \"@]\"\n\nand pr_list_sep ~sep level ppf l =\n  match l with\n    [] -> assert false\n  | t :: [] -> pr level ppf t\n  | t :: tl -> fprintf ppf \"%a%s@ \" (pr level) t sep;\n    pr_list_sep ~sep level ppf tl\n\nand pr_def ppf (x, t) =\n  fprintf ppf \"@[%s =@ %a@]\" Name.(!!x) (pr Prio.lowest) t\nand pr_defs ppf l =\n  match l with\n    [] -> assert false\n  | d :: [] -> pr_def ppf d\n  | d :: ll -> fprintf ppf \"%a@ and@ \" pr_def d;\n    pr_defs ppf ll\n\nlet is_empty_comp (module M : Typ.Basic) t =\n  Typ.(is_empty (M.set (M.get t) empty))\n\nlet is_any_comp (module M : Typ.Basic) t =\n  let any_comp = M.set (M.get Typ.any) Typ.empty in\n  Typ.(subtype any_comp (M.set (M.get t) empty))\n\nlet choose_complement t =\n  let empty_comps = List.fold_left (fun acc b ->\n      let i =\n        match b with\n          Typ.Basic (module M)\n        | Typ.Constr ((module M), _) ->\n          if is_any_comp (module M) t then 1 else 0\n      in\n      acc + i\n    ) 0 Typ.all_components\n  in\n  empty_comps > Typ.num_components / 2\n\n\nmodule Vars = Base.Common.Pair (Var.Set) (Var.Set)\nmodule VarTable = Hashtbl.Make (Vars)\nmodule DescrTable = Hashtbl.Make (Typ)\nlet group_by_vars t =\n  let open Typ in\n  let var_table = VarTable.create 16 in\n  let get table key = try VarTable.find table key with Not_found -> empty in\n  let replace table key t = VarTable.replace table key t in\n  let update table key t = replace table key (cup t (get table key)) in\n  (* Group according to the DNF *)\n  List.iter (function Basic (module M) | Constr ((module M), _) ->\n      M.get t\n      |> M.dnf\n      |> Seq.iter (fun ((pos, neg), l) ->\n          let key = (Var.Set.of_list pos, Var.Set.of_list neg) in\n          update var_table key (M.set (M.leaf l) empty)\n        )\n    ) all_components;\n  var_table\n\nlet reduce_variables var_table =\n  (* assumes (pos <> neg) *)\n  let vdest = VarTable.create 16 in\n  let empty_key = Var.Set.(empty, empty) in\n  let update_empty t =\n    let s = try VarTable.find vdest empty_key with Not_found -> Typ.empty in\n    VarTable.replace vdest empty_key Typ.(cup t s)\n  in\n  let te = try VarTable.find var_table empty_key with Not_found -> Typ.empty in\n  VarTable.remove var_table empty_key;\n  VarTable.add vdest empty_key te;\n  VarTable.iter (fun ((pos, neg) as key) t1 ->\n      if not (VarTable.mem vdest key) then begin\n        try\n          let t2 = VarTable.find vdest (neg, pos) in\n          let i12 = Typ.cap t1 t2 in\n          if Typ.is_empty i12 then begin\n            VarTable.add vdest key t1;\n            VarTable.add vdest (neg, pos) t2;\n          end else begin\n            update_empty i12;\n            VarTable.add vdest key Typ.(diff t1 i12);\n            VarTable.add vdest (neg, pos) Typ.(diff t2 i12);\n          end\n        with Not_found -> VarTable.add vdest key t1\n      end) var_table;\n  let te = VarTable.find vdest empty_key in\n  if Typ.is_empty te then VarTable.remove vdest empty_key;\n  vdest\n\nlet split_variables t =\n  let table = group_by_vars t in\n  reduce_variables table\n\nlet is_any t = Typ.(subtype any t)\nlet pcap l = match l with\n    [] -> assert false\n  | [ t ] -> t\n  | _ -> Cap l\n\nlet pcup l = match l with\n  | [] -> empty_\n  | [ t ] -> t\n  | _ -> Cup l\n\nlet any_prod = Pair (any, any)\nlet any_arrow = name (Name.cons \"Arrow\")\n\nlet get_leaf (type t) (module M : Typ.Basic with type Leaf.t = t) t =\n  match (M.get t |> M.dnf) () with\n    Seq.Nil -> M.Leaf.empty\n  | Seq.Cons((([], []), l), _ ) -> l\n  | _ -> assert false\n\nlet pbasic (module M : Typ.Basic) t acc =\n  let l = get_leaf (module M) t in\n  if M.Leaf.is_empty l then acc else (Printer (fun ppf -> M.Leaf.pp ppf l))::acc\n\nlet rec_names = Array.map Name.cons [|\"X\"; \"Y\"; \"Z\"; \"T\"; \"U\"; \"V\"; \"W\"|]\nlet decompile t =\n  let memo = DescrTable.create 16 in\n  let name_id = ref 0 in\n  let get_name () =\n    let i = !name_id in\n    incr name_id;\n    let len = Array.length rec_names in\n    if i >= len then Name.cons (\"X\" ^ (string_of_int (i-len)))\n    else rec_names.(i)\n  in\n  let rec pr_descr t =\n    match DescrTable.find memo t with\n    | Some (_, _, pname) -> pname\n    | None ->\n      let n = get_name () in\n      let pname = name n in\n      DescrTable.replace memo t (Some (n, empty_, pname));\n      pname\n    | exception Not_found ->\n      DescrTable.add memo t None;\n      let var_table = split_variables t in\n      let acc, has_others  =\n        match VarTable.find_opt var_table Var.Set.(empty, empty) with\n          Some t -> if is_any t then [any], false else\n            begin\n              VarTable.remove var_table Var.Set.(empty, empty);\n              [ pr_choose_compl t ], true\n            end\n        | None -> [], true\n      in\n      let acc = if not has_others then acc else\n          VarTable.fold (fun (vpos, vneg) t acc ->\n              if Typ.is_empty t then acc else\n                let tacc = Var.Set.fold (fun v acc -> (var v) :: acc) vpos [] in\n                let tacc = Var.Set.fold (fun v acc -> (Neg (var v)) :: acc) vneg tacc in\n                let tacc = if is_any t then tacc else (pr_choose_compl t) :: tacc in\n                (pcap (List.rev tacc)) :: acc)\n            var_table acc\n      in\n      let res = pcup acc in\n      match DescrTable.find memo t with\n        None -> DescrTable.remove memo t; res\n      | Some (n, _, pname) ->\n        DescrTable.replace memo t (Some (n, res, pname)); res\n  and pr_node n = pr_descr (Typ.descr n)\n  and pr_choose_compl t =\n    let do_complement = choose_complement t in\n    let t = if do_complement then Typ.neg t else t in\n    let res = pr_no_var t in\n    match res, do_complement with\n      [], false -> empty_\n    | [], true -> any\n    | l, false -> pcup l\n    | l, true -> Diff (any, pcup l)\n  and pr_no_var t =\n    let open Typ in\n    let acc = [] in\n    let acc = pbasic (module VarEnum) t acc in\n    let acc = pbasic (module VarInt) t acc in\n    let acc = pbasic (module VarChar) t acc in\n    let acc = pbasic (module VarUnit) t acc in\n    let acc = pr_constr (module VarProduct : Basic with type Leaf.t = Product.t)\n        (module Product : Base.Sigs.Bdd with type t = Product.t\n                                         and type atom = Product.atom\n                                         and type Leaf.t = Product.Leaf.t)\n        any_prod pr_product_line t acc\n    in\n    let acc = pr_constr (module VarArrow : Basic with type Leaf.t = Product.t)\n        (module Product : Base.Sigs.Bdd with type t = Product.t\n                                         and type atom = Product.atom\n                                         and type Leaf.t = Product.Leaf.t)\n        any_arrow pr_arrow_line t acc\n    in\n    acc\n  and pr_constr (type t a l)\n      (module V : Typ.Basic with type Leaf.t = t)\n      (module C : Base.Sigs.Bdd with type t = t and type atom = a and type Leaf.t = l)\n      any pr_line t acc =\n    if is_empty_comp (module V) t then acc\n    else if is_any_comp (module V) t then any :: acc\n    else\n      (*let () = Format.eprintf \"Going to ARROW LINE CAUSE: %a is not empty\\n%!\" \n      Typ.pp (V.set (V.get t) Typ.empty) in*)\n      let dnf = get_leaf (module V) t in\n      C.dnf dnf\n      |> Seq.fold_left pr_line acc\n  and pr_product_line acc ((posp, negp), _) =\n    let posp =\n      let open Typ in\n      match posp with\n        [] -> None\n      | [ (n1, n2)] -> Some (Pair(pr_node n1, pr_node n2))\n      | ( n1, n2) :: ll ->\n        let n1, n2 = List.fold_left (fun (t1, t2) (n1, n2) ->\n            (cap t1 (descr n1), cap t2 (descr n2))) (descr n1, descr n2) ll\n        in  Some ( Pair (pr_descr n1, pr_descr n2))\n    in\n    let negp = List.map (fun (n1, n2) -> Pair (pr_node n1, pr_node n2)) negp in\n    let posp = match posp with None ->Pair (any, any) | Some l -> l in\n    let res = match negp with\n        [] -> posp\n      | l -> Diff(posp, pcup l)\n    in res :: acc\n  and pr_arrow_line acc ((posa, nega),_) =\n    (*Format.eprintf \"IN ARROW LINE\\n%!\"; *)\n    let arrow (n1, n2) = Arrow (pr_node n1, pr_node n2) in\n    let posa = List.map arrow posa in\n    let nega = List.map arrow nega in\n    let posa = match posa with [] -> any_arrow | l -> pcap l in\n    let res = match nega with\n        [] -> posa\n      | l -> Diff(posa, pcup l)\n    in\n    res :: acc\n  in\n  let res = pr_descr t in\n  let recs = DescrTable.fold (fun _ x acc ->\n      match x with\n        None -> acc\n      | Some (n, d, _) -> (n, d)::acc\n    ) memo []\n  in\n  match recs with\n    [] -> res\n  | _ -> Rec(res, recs)\n\nlet global_print_table = DescrTable.create 16\n\nlet pp fmt t =\n  let d = try DescrTable.find global_print_table t with\n      Not_found ->\n      let d = decompile t in\n      DescrTable.add global_print_table t d;\n      d\n  in\n  pr Prio.lowest fmt d"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"position":{"line":236,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":236,"character":30},"end":{"line":236,"character":30}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"position":{"line":5,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/ast.ml","languageId":"ocaml","version":0,"text":"type absent = |\n\ntype  ('te, 'ident) decl =\n  { name :  'ident;\n    params : 'ident list;\n    expr : 'te }\n\nmodule Open = struct\n  type ('te, 'ident, 'var, 're, 'extra) typ = [\n    (* Basic types *)\n    | `Typ of Stt.Typ.t\n    (* Constructors *)\n    | `Pair of 'te * 'te\n    | `Arrow of 'te * 'te\n    (* Connectives *)\n    | `Cup of 'te list\n    | `Cap of 'te list\n    | `Diff of 'te * 'te\n    | `Neg of 'te\n    (* Polymorphic variable *)\n    | `Var of 'var\n    (* Regexp *)\n    | `Regexp of 're\n    (* Type nodes (instantiation and recursive types) *)\n    | `Node of ('te, 'ident) node ref\n    (* Extensions that are not used by the concrete syntax *)\n    | `Extra of 'extra\n  ]\n  and ('te, 'ident) node = [\n      `Inst of 'ident * 'te list\n    | `Rec of 'te * ('ident * 'te) list\n    | `From of 'ident *  ('ident * 'te list)\n    | `Expr of 'te\n  ]\n  and ('te, 're) re = [\n      `Re_epsilon\n    | `Re_typ of 'te\n    | `Re_star of 're\n    | `Re_alt of 're * 're\n    | `Re_concat of 're * 're\n  ]\n\n\n\nend\n\n\nmodule Located =\nstruct\n  type ident = Ident.t Loc.located\n  type typ = (typ, ident, ident, re, absent) Open.typ Loc.located\n  and node = (typ, ident) Open.node\n  and re = (typ, re) Open.re Loc.located\n  type nonrec decl = (typ, ident) decl\nend\n"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/ast.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.mli","languageId":"ocaml","version":0,"text":"val pp : Format.formatter -> Stt.Typ.t -> unit\n"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.mli"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.mli","languageId":"ocaml","version":0,"text":"val pp : Format.formatter -> Stt.Typ.t -> unit\n"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.mli"}}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"position":{"line":211,"character":76}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 6, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":211,"character":76},"end":{"line":211,"character":76}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"position":{"line":176,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 8, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":176,"character":0},"end":{"line":176,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"position":{"line":213,"character":31}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.014066696167ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 10, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":213,"character":28},"end":{"line":213,"character":31}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 11, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"position":{"line":213,"character":43}}}
[server] Got a method textDocument/hover
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 12, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":213,"character":43},"end":{"line":213,"character":43}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 13, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":213,"character":28},"end":{"line":213,"character":31}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 14, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":213,"character":28},"end":{"line":213,"character":31}},"context":{"diagnostics":[],"triggerKind":1,"only":["refactor","source"]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0138282775879ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 15, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/automaton.mli","languageId":"ocaml","version":0,"text":"module type S = sig\n\n  type lt\n  (** The letter type *)\n  type t\n  (** The automaton type *)\n\n  module R : Regexp.S\n  (** The regexp module *)\n  type regexp\n  (** The regexp type *)\n\n  val empty : t\n  (** The empty automaton *)\n  val create : lt list -> t\n  (** [create alphabet] creates an empty automaton with the given alphabet [alphabet] *)\n\n  val add_state : t -> int -> t\n  (** [add_state automaton state] adds [state] in [automaton]. \n     If it's already a state in [automaton], does nothing *)\n  val add_states : t -> int list -> t\n  (** [add_states automaton states] adds several states in [automaton] *)\n  val add_trans : t -> int -> lt -> int -> t\n  (** [add_trans automaton state1 letter state2] adds a transition labelled [letter] between [state1] and [state2] in [automaton].\n\n     Raises : [state1] and [state2] must be [automaton]'s states.\n     Raises : [l] must be in the [automaton]'s alphabet.\n\n     If the transition is already in [automaton], does nothing *)\n  val add_transitions : t -> (int * lt * int) list -> t\n  (** [add_transitions automaton transitions] adds several transitions in [automaton] *)\n  val add_start : t -> int -> t\n  (** [add_start automaton state] sets [state] as a start state in [automaton].\n     If it's already the case, does nothing\n\n     Raise : [state] must be an [automaton]'s state *)\n  val add_starts : t -> int list -> t\n  (** [add_starts automaton states] sets several states as start states in [automaton] *)\n  val add_end : t -> int -> t\n  (** [add_end automaton state] sets [state] as an end state in [automaton].\n     If it's already the case, does nothing\n\n     Raise : [state] must be an [automaton]'s state *)\n  val add_ends : t -> int list -> t\n  (** [add_ends automaton states] sets several states as end states in [automaton] *)\n\n  val remove_state : t -> int -> t\n  (** [remove_state automaton state] removes [state] from [automaton]'s states.\n     If it isn't an [automaton]'s states, does nothing *)\n  val remove_states : t -> int list -> t\n  (** [remove_states automaton states] removes several states in [automaton] *)\n  val remove_trans : t -> int -> lt -> int -> t\n  (** [remove_trans automaton state1 letter state2] removes the given transitions from [automaton]'s transitions.\n     If it isn't an [automaton]'s transitions, does nothing *)\n  val remove_all_trans_between : t -> int -> int -> t\n  (** [remove_all_trans_between automaton state1 state2] removes all transitions between [state1] and [state2] in [automaton] *)\n  val remove_start : t -> int -> t\n  (** [remove_start automaton state] unsets [state] as a start state in [automaton].\n     If it's already the case, does nothing *)\n  val remove_starts : t -> int list -> t\n  (** [remove_starts automaton states] unsets several states as start state in [automaton] *)\n  val remove_end : t -> int -> t\n  (** [remove_end automaton state] unsets [state] as an end state in [automaton].\n     If it's already the case, does nothing *)\n  val remove_ends : t -> int list -> t\n  (** [remove_ends automaton states] unsets several states as end state in [automaton] *)\n\n  val to_dot : t -> string -> unit\n  (** [to_dot automaton file_name] creates a dot file named \"[file_name].dot\" representing [automaton] *)\n\n  val is_deterministic : t -> bool\n  (** [is_deterministic automaton] checks if [automaton] is deterministic.\n\n     A deterministic finite automaton (or DFA) follows these 3 rules :\n     - Has one start state ;\n     - Has no epsilon-transitions ;\n     - For all states, there exists one and only one transition labelled by a same letter from it.\n        For instance, if we have (1, \"a\", 2) and (1, \"a\", 3), then it isn't deterministic *)\n\n  val determinize : t -> t\n  (** [determinize automaton] returns an automaton which is the DFA version of [automaton].\n     If [automaton] has n states, the DFA automaton has at most 2^n states.\n\n     A deterministic finite automaton (or DFA) follows these 3 rules :\n     - Has one start state ;\n     - Has no epsilon-transitions ;\n     - For all states, there exists one and only one transition labelled by a same letter from it.\n        For instance, if we have (1, \"a\", 2) and (1, \"a\", 3), then it isn't deterministic *)\n  (* val get_rid_of_unreachable_states : t -> t *)\n  (** [get_rid_of_unreachable_states automaton] returns [automaton] without unreachable states *)\n  (* val minimize : t -> t *)\n  (** [minimize automaton] returns a minimized version of [automaton], the smallest possible \n\n     [automaton] must be a DFA without unreachable states *)\n\n  val check_word : t -> lt list -> bool\n  (** [check_word automaton word] checks if [word] is recognized by [automaton] *)\n  val to_regex_my : t -> regexp\n  (** [to_regex_my automaton] returns the regex representing [automaton] using the McNaughton-Yamada method. \n     The returned value might be unsimplified *)\n  (* val to_regex_bm : t -> regexp *)\n  (** [to_regex_bm automaton] returns the regex representing [automaton] using the Brzozowski-McCluskey method,\n      also know as the \"state elimination method\". \n     The returned value might be unsimplified *)\n  (* val from_regex : regexp -> lt list -> t *)\n  (** [from_regex reg alphabet] creates a NFA (Non-deterministic Finite Automaton) recognizing [reg] *)\n\nend\n\nmodule Make (Lt : Letter.Letter) : S with type lt = Lt.t \n                                      and module R = Regexp.Make(Lt) \n                                      and type regexp = Regexp.Make(Lt).t_simp"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/automaton.mli"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/parser.mli","languageId":"ocaml","version":0,"text":"module S : Letter.Letter with type symbol = string \n                          and type t = string\n(** the Letter module : just a string type *)\n\nmodule A : Automaton.S with type lt = S.t\n                       and module R = Regexp.Make(S) \n                       and type regexp = Regexp.Make(S).t_simp\n(** the Automaton module *)\n\nval parse_file : string -> string * A.t\n(** [parse_file file_name] parses the file named [file_name] to create the corresponding automaton.\n\n    The file should looks like this, otherwise it will raise an exception.\n    This is an example:\n\n    (a|b)*bb\n    6\n    4,5\n    0,a,0\n    0,b,0\n    ...\n *)"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/parser.mli"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[],"triggerKind":1,"only":["refactor","source"]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pp_regexp/parser.mli"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.mli","languageId":"ocaml","version":0,"text":"module Make (X1 : Sigs.Set) (X2 : Sigs.Set ) : sig\n\n  type simple = (X1.t * X2. t) list Seq.t\n  (** The type of a simple product decomposition which represents\n      an arbitrary union of union of products.*)\n\n  type normal = (X1.t * X2.t) list\n  (** The type of a normalized product decomposition which\n      represent a union of products that are pairwise disjoints on their first component.\n  *)\n\n  type dnf = ((X1.t * X2.t) list * (X1.t * X2.t) list) Seq.t\n  (** The type of a DNF of products, which is a union of intersections\n      of positive products and negative products.\n  *)\n\n  val simple : dnf -> simple\n  (** [simple dnf] simplifies a DNF of products into a union of products,\n      eliminating the negative parts.\n  *)\n\n  val normal : dnf -> normal\n  (* [normal dnf] normalizes a DNF of products into a union of products\n     disjoints on their first component.\n  *)\nend\n"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml","languageId":"ocaml","version":0,"text":"module Make (X1 : Sigs.Set) (X2 : Sigs.Set) =\nstruct\n  type simple = (X1.t * X2.t) list Seq.t\n  type normal = (X1.t * X2.t) list\n  type dnf = ((X1.t * X2.t) list * (X1.t * X2.t) list) Seq.t\n\n  (*\n    Eliminate negation by doing :\n    (S1xS2)∖(T1xT2) = (S1x(S2\\T2)) U ((S\\T1)xS2)\n    to remove a single product from S1xS2\n    This yield two positive products (at most)\n    (R U S)\\ T = (R \\ T) U (S \\ T)\n\n  *)\n\n  let rec single_diff s1 s2 neg acc =\n    match neg with\n      [] -> (s1, s2)::acc\n    | (t1, t2) :: nneg ->\n      let d1 = X1.diff s1 t1 in\n      let empty_d1 = X1.is_empty d1 in\n      let d2 = X2.diff s2 t2 in\n      let empty_d2 = X2.is_empty d2 in\n      if empty_d1 && empty_d2 then acc\n      else if empty_d1 then single_diff s1 d2 nneg acc\n      else if empty_d2 then single_diff d1 s2 nneg acc\n      else\n        single_diff d1 s2 nneg (single_diff s1 d2 nneg acc)\n\n  let rec cap_l any1 any2 l =\n    match l with\n      [] -> (any1, any2)\n    | (x1, x2) :: ll ->\n      cap_l (X1.cap any1 x1) (X2.cap any2 x2) ll\n\n  let rec simple dnf =\n    match dnf () with\n      Seq.Nil -> (fun () -> Seq.Nil)\n    | Seq.Cons((pos, neg), ss) ->\n      fun () ->\n        let s1, s2 = cap_l X1.any X2.any pos in\n        if X1.is_empty s1 || X2.is_empty s2 then simple ss ()\n        else\n          match single_diff s1 s2 neg [] with\n            [] -> simple ss ()\n          | l -> Seq.Cons (l, fun () -> simple ss ())\n\n  let rec single_disj a1 a2 l acc =\n    match l with\n      [] -> (a1, a2)::acc\n    | ((b1,b2) as b) :: ll ->\n      let x = X1.cap a1 b1 in\n      if X1.is_empty x then\n        single_disj a1 a2 ll (b :: acc)\n      else\n        let a1' = X1.diff a1 b1 in\n        let b1' = X1.diff b1 a1 in\n        let empty_a1' = X1.is_empty a1' in\n        let empty_b1' = X1.is_empty b1' in\n        if empty_a1' && empty_b1' then\n          (* a1 = b1 *)\n          single_disj a1 (X2.cup a2 b2) ll acc\n        else\n        if empty_a1' then\n          (b1', b2)::(x, X2.cup a2 b2)::(List.rev_append ll acc)\n        else\n          single_disj a1' a2 ll (\n            if empty_b1' then ((x, X2.cup a2 b2)::acc)\n            else ((b1', b2)::(x, X2.cup a2 b2)::acc))\n\n  let normal dnf =\n    dnf\n    |> simple\n    |> Seq.flat_map List.to_seq\n    |> Seq.fold_left (fun acc (s1, s2) -> single_disj s1 s2 acc []) []\n\nend"}}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.mli"}}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"position":{"line":11,"character":6}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0169277191162ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 17, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"range":{"start":{"line":11,"character":6},"end":{"line":11,"character":34}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00715255737305ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 18, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"position":{"line":12,"character":0}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0109672546387ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 19, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":0}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0121593475342ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 20, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"position":{"line":8,"character":41}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0259876251221ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 21, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"range":{"start":{"line":8,"character":41},"end":{"line":8,"character":41}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00619888305664ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 22, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"position":{"line":9,"character":41}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 23, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"range":{"start":{"line":9,"character":41},"end":{"line":9,"character":41}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00882148742676ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 24, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"position":{"line":58,"character":23}}}
[server] Got a method textDocument/hover
[server] processing took 0.0131130218506ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 25, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"},"range":{"start":{"line":58,"character":23},"end":{"line":58,"character":23}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/core
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/core
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 26, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/core/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":213,"character":28},"end":{"line":213,"character":31}},"context":{"diagnostics":[],"triggerKind":2}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 27, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/core/base/cartesian.ml"}}}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":213,"character":28},"end":{"line":213,"character":31}},"context":{"diagnostics":[],"triggerKind":1,"only":["refactor","source"]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0119209289551ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 28, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/p9romain/rp/cours/Stage/stt/syntax/pretty.ml"},"range":{"start":{"line":213,"character":28},"end":{"line":213,"character":31}},"context":{"diagnostics":[],"triggerKind":1,"only":["refactor","source"]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0100135803223ms
Found a `dune` file at /home/p9romain/rp/cours/Stage/stt/syntax
]] Making a new jbuilder package at /home/p9romain/rp/cours/Stage/stt/syntax
=== Project root: /home/p9romain/rp/cours/Stage/stt
Detected `opam` dependency manager for local use
Sending response {"id": 29, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/p9romain/rp/cours/Stage/stt/syntax/.merlin"}}
